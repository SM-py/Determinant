from urllib import request as urlenc
from bs4 import BeautifulSoup
from pymystem3 import Mystem
from typing import Union
from string import punctuation
import pymorphy2
import requests
from ruwordnet import RuWordNet
from collections import Counter
import wikipedia
import difflib
import cash
import gensim
import wikipedia
import wikipediaapi
from mwclient import Site
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import re


import time

class Determinant :
    
    """Категорирует статьи по тексту и заголовку из списка категорий Вкикипедии при помощи взаимодействия нейросетей и алгоритмов"""
    
    def __init__(self) :
        
        # КОНФИГУРИРУЕМЫЕ ПЕРЕМЕННЫЕ
        
        # Список категорий из Википедии на которые нужно разложить статьи 
        self.wik_exctracted_cats = list(set(['Категория:Мебель', 'Категория:Виды мебели', 'Категория:Виды мебели по конструктивным признакам', 'Категория:Виды мебели по материалам изготовления', 'Категория:Корпусная мебель', 'Категория:Мягкая мебель', 'Категория:Виды мебели по сложности', 'Категория:Мебельные гарнитуры', 'Категория:Виды мебели по эксплуатационному назначению', 'Категория:Мебель для предприятий торговли', 'Категория:Виды мебели по прочим признакам', 'Категория:Мебельные изделия', 'Категория:Мебель для сидения (лежания)', 'Категория:Диваны', 'Категория:Кресла', 'Категория:Катапультные кресла', 'Категория:Кровати', 'Категория:Стулья', 'Категория:Троны', 'Категория:Троны России', 'Категория:Христианские кафедры', 'Категория:Мебель для хранения', 'Категория:Сундуки', 'Категория:Тумбы', 'Категория:Шкафы', 'Категория:Книжные шкафы', 'Категория:Мебельные подставки', 'Категория:Тумбы', 'Категория:Столы', 'Категория:Тумбы', 'Категория:Постельные принадлежности', 'Категория:Малые архитектурные формы', 'Категория:Ограждения', 'Категория:Детская площадка', 'Категория:Туалет', 'Категория:Энергоснабжение', 'Категория:Теплоснабжение', 'Категория:Отопление', 'Категория:Котельные', 'Категория:Отопительная техника', 'Категория:Водонагреватели', 'Категория:Чайники', 'Категория:Отопительные приборы', 'Категория:Грелки', 'Категория:Электроотопительные приборы', 'Категория:Печи', 'Категория:Канализация', 'Категория:Водоснабжение', 'Категория:Вентиляция', 'Категория:Технология строительных процессов', 'Категория:Молоты', 'Категория:Пилы', 'Категория:Стеклорезы', 'Категория:Строительные инструменты', 'Категория:Строительная кладка', 'Категория:Строительные технологии', 'Категория:Сваи', 'Категория:Основания и фундаменты', 'Категория:Вентиляционное оборудование', 'Категория:Строительные элементы и конструкции', 'Категория:Железобетонные конструкции', 'Категория:Ремонт', 'Категория:Садовые инструменты', 'Категория:Слесарные инструменты', 'Категория:Косилки', 'Категория:Комбайны', 'Категория:Сельскохозяйственные инструменты', 'Категория:Горячее водоснабжение', 'Категория:Газопроводы', 'Категория:Трубопроводы', 'Категория:Сантехника', 'Категория:Гидромассаж', 'Категория:Душ', 'Категория:Вентиляторы', 'Категория:Унитазы', 'Категория:Качели', 'Категория:Плавательные бассейны', 'Категория:Дизайн', 'Категория:Интерьер', 'Категория:Декоративное оформление интерьера', 'Категория:Декоративное оформление стен', 'Категория:Обои', 'Категория:Декоративное оформление оконных проёмов', 'Категория:Полы', 'Категория:Мозаичные полы', 'Категория:Напольные покрытия', 'Категория:Паркет', 'Категория:Помещения', 'Категория:Типы помещений', 'Категория:Типы помещений на кораблях', 'Категория:Подвалы', 'Категория:Чердаки', 'Категория:Апартаменты', 'Категория:Помещения в жилище', 'Категория:Залы', 'Категория:Квартиры', 'Категория:Неотапливаемые помещения', 'Категория:Веранды', 'Категория:Ландшафтный дизайн', 'Категория:Садовые украшения', 'Категория:Бытовая техника', 'Категория:Бытовые роботы', 'Категория:Роботы-пылесосы', 'Категория:Водонагреватели', 'Категория:Чайники', 'Категория:Интеллектуальная бытовая техника', 'Категория:Роботы-пылесосы', 'Категория:Кухонная техника', 'Категория:Блендеры', 'Категория:Кофейное оборудование', 'Категория:Кухонные плиты', 'Категория:Пылесосы', 'Категория:Роботы-пылесосы', 'Категория:Швейные машины', 'Категория:Бытовая электроника', 'Категория:Звуковоспроизводящая аппаратура', 'Категория:Телевизионные приёмники', 'Категория:Умный дом', 'Категория:Бытовые роботы', 'Категория:Роботы-пылесосы', 'Категория:Осветительные приборы', 'Категория:Лампы', 'Категория:Электронные лампы', 'Категория:Светильники', 'Категория:Фонари', 'Категория:Категория:Хозяйственные строения', 'Категория:Архитектурные элементы', 'Категория:Ворота', 'Категория:Дверь', 'Категория:Ворота', 'Категория:Дымовые трубы', 'Категория:Крыша', 'Категория:Лестницы', 'Категория:Ограждения', 'Категория:Полы', 'Категория:Стены', 'Категория:Фасады', 'Категория:Строительные материалы', 'Категория:Асбест', 'Категория:Бетон', 'Категория:Асфальтобетон', 'Категория:Бесцементный бетон', 'Категория:Железобетон', 'Категория:Машины для бетонных работ', 'Категория:Цемент', 'Категория:Битумы', 'Категория:Асфальт', 'Категория:Асфальтобетон', 'Категория:Газобетон', 'Категория:Гидроизоляционные материалы', 'Категория:Глины', 'Категория:Дорожные покрытия', 'Категория:Асфальт', 'Категория:Асфальтобетон', 'Категория:Бетон', 'Категория:Асфальтобетон', 'Категория:Бесцементный бетон', 'Категория:Железобетон', 'Категория:Машины для бетонных работ', 'Категория:Цемент', 'Категория:Древесные материалы', 'Категория:Железобетон', 'Категория:Камень', 'Категория:Кирпичи', 'Категория:Кровельные материалы', 'Категория:Облицовочные материалы', 'Категория:Облицовка природным камнем', 'Категория:Огнеупоры', 'Категория:Асбест', 'Категория:Песок', 'Категория:Пластмассы', 'Категория:Природный камень', 'Категория:Гранит', 'Категория:Известняк', 'Категория:Мрамор', 'Категория:Облицовка природным камнем', 'Категория:Туфы', 'Категория:Стекло', 'Категория:Строительные плиты', 'Категория:Древесные плиты', 'Категория:Цемент']))
        
        # Список принимаемых значений многозначных слов. Когда слово многозначное его смысл будет браться из этого списка, допустим у слова "раковина" есть несколько значений, но если в списке указано только "Раковина(сантехника)", то будет использоваться именно оно
        self.accepted_sences = set(['АБС-пластик', 'Диван', 'Барный стул', 'Фронтон', 'Галерея', 'Туалетная кабинка', 'Партер (парк)', 'Категория:Производственная мебель', 'Кофеварка', 'Нервюра', 'Керамзитобетон', 'Категория:Чердаки', 'Категория:Горячее водоснабжение', 'Трон', 'E.S.E.', 'Харимисэ', 'Альболит', 'Дворец водных видов спорта (Гомель)', 'Письменный стол', 'Категория:Музеи-квартиры', 'Категория:Дымовые трубы', 'Кофейник', 'Категория:Асбестодобывающие предприятия', 'Полистиролбетон', 'Южный газотранспортный коридор', 'Лестница Селарона', 'Песочница', 'Отжиг стекла', 'Категория:Клеёные древесные материалы', 'Веранда', 'Категория:Светильники', 'Воздушный душ', 'Проницаемое мощение улиц', 'Меланжер', 'Типы ферм', 'Жидкокристаллический полимер', 'Перегородки', 'Астралит', 'Композитный ордер', 'Коса (инструмент)', 'Молот (машина)', 'Автобетоносмеситель с самозагрузкой', 'Подпорная стена', 'Смектиты', 'Алебастровое стекло', 'Вергунов, Аркадий Павлович', 'Автоклавные материалы', 'Кресло-туалет', 'Фитодизайн', 'Искусственная трава', 'Пластификатор (строительство)', 'Метод статического вдавливания', 'Щебень', 'Нейтральная вставка', 'Стена Уаргаде', 'Ступень (архитектура)', 'Деформационный шов', 'Железобетонная плита', 'Неолейкорит', 'Анализ устойчивости откосов', 'Категория:Архитектурные элементы Древней Греции', 'Барбекю', 'Циклон (пылеуловитель)', 'Двор', 'Химически закалённое стекло', 'Филёнка (архитектура)', 'КЯ-1М', 'Опора', 'Кресло короля Эдуарда', 'Вентиляция кровельная', 'Оконные ставни', 'Звукосниматель электрофона', 'Секционные ворота', 'Триод', 'Ламбрекен', 'Мебель для кухни', 'Бедиасит', 'Категория:Пылесосы', 'Категория:Реставрация', 'Категория:Дверь', 'Астиляр', 'GIPL', 'Категория:Кирпичные здания и сооружения', 'Белый поток', 'Формула Баркгаузена', 'Римский бетон', 'Керосиновая лампа', 'Лунные ворота', 'Тостер', 'Старинное стекло Англии', 'Транссредиземноморский газопровод', 'Стеклярус', 'Виркатор', 'Сантехника', 'Категория:Строительная кладка', 'Лампа Нернста', 'Лопата', 'Пиролизный котёл', 'Категория:Изделия из стекла', 'Щебёночно-мастичный асфальтобетон', 'Стилобат', 'Древесноволокнистая плита средней плотности', 'Категория:Добыча известняка', 'Электродный водонагреватель', 'X10', 'Гидромеханизация', 'Теплогенератор', 'Категория:Наушники', 'Динатронный эффект', 'Кресло-качалка', 'Квадр', 'Категория:Вагоноремонтные предприятия', 'Полик', 'Дувал', 'Аглай', 'Монтаж накруткой', 'Аутригер', 'Релин', 'Решётка (заграждение)', 'Кабелерез', 'Люстра', 'Патрубок', 'Ларь', 'Куржак (иней)', 'Квартиры-гробы', 'Дверной ограничитель', 'Чайник', 'Аттик (архитектура)', 'Механотрон', 'Рало', 'Категория:Пилы', 'Фасад', 'Винтаж (мода)', 'Читальный зал', 'Каолинит', 'Световой колодец', 'Категория:Облицовка природным камнем', 'LG LX9500', 'Битум', 'Буровое судно', 'Растворонасос', 'Насосная станция', 'Смоляная яма', 'Скандинавский дизайн', 'Коловорот', 'EL84', 'Косилка-робот', 'Саман', 'Трансанатолийский газопровод', 'Асбестовый балласт', 'НР (котёл)', 'Сетевой медиаплеер', 'Гуги', 'Категория:Музеи стекла', 'Метантенк', 'Категория:Лестницы', 'Музыкальный центр', 'Категория:Стеклорезы', 'Категория:Ворота по времени постройки', 'Конденсационный колодец', 'Компьютер', 'Курдонёр', 'Атмосферный шлюз', 'Категория:Предприятия по ремонту железнодорожного оборудования', 'Исламский туалетный этикет', 'Кухонная вытяжка', 'Райдер (садовый трактор)', 'Экзонартекс', 'Увлажнитель воздуха', 'Контрфорс', 'Концевая мера длины', 'Халькогенидное стекло', 'Умная колонка', 'Этилцеллюлоза', 'Дипилон', 'Категория:Дворцовые лестницы', 'Седилия', 'Категория:Гобелен', 'Киянка', 'Исинская глина', 'Программируемое реле', 'Категория:Изделия из пластмассы', 'Санбёрст', 'ILife A8', 'Ростверк', 'Геосинтетики', 'Вентилятор', 'Computer-aided engineering', 'Антресоль', 'Wi-Fi', 'Кабельная проходка', 'Категория:Строительство из камня', 'Штраб', 'Sedia Gestatoria', 'Водоцементное соотношение', 'Водоканал города Одессы', 'Категория:Стекло', 'Каскад (архитектура)', 'Гидратация цемента', 'Смеситель (сантехника)', 'Подставка для зонтов', 'Интерконнектор (газопровод)', 'Мелисса Фокс', 'Железобетонный забор ПО-2', 'Пылесос для бассейна', 'Виндзорский стул', 'Мулюра', 'Шпиль', 'Resilient Power Control Module', 'Герметики для деревянного домостроения', 'Предварительно напряжённый железобетон', 'Дренажная защита', 'Один и три стула', 'Каталитическая грелка', 'Мидийская стена', 'Индукционная лампа', 'Швейная машина', 'Сушильная машина', 'Категория:Изгороди', 'Печь', 'Лестница Шрёдера', 'Категория:Производители швейных машин', 'Дефлектор (аэродинамика)', 'Дакимакура', 'Кубрик (морской термин)', 'Подъёмное окно', 'Георгианит', 'Windoro', 'Каррел', 'Вафельница', 'Категория:Грелки', 'Всемирная туалетная организация', 'Пирамидион', 'Категория:Отопительные приборы', 'Торшер', 'Бабинец (архитектура)', 'Кают-компания', 'Универсальный резак', 'Категория:Производители стекла', 'Ордерная аркада', 'Walkman', 'Аквадаг', 'Перекрытие-оболочка', 'Савонарола (кресло)', 'Категория:Кормоуборочные комбайны', 'Вантуз (инструмент)', 'Белый камень', 'Азарашен', 'Viega', 'Киоск K67', 'Закладные детали', 'Вантуз (устройство)', 'Категория:Галереи', 'Электровакуумный диод', 'Табурет', 'Зубец (фортификация)', 'Ремонтопригодность', 'Категория:Печи', 'Косоур', 'Декатрон', 'Измельчитель пищевых отходов', 'Директива 98/83/EC', 'Сени', 'Карбидная лампа', 'Крышка канализационного люка', 'HTPC', 'Фаолит', 'Категория:Железобетонные башни', 'Морской трубопровод', 'Категория:Дизайнерские награды', 'Белорусская резь', 'Конус Абрамса', 'Фонтан (Дюшан)', 'Кирпичная печь', 'Свиной туалет', 'Пуццолан', 'Ожива', 'Ванная', 'Муфта (соединение двух участков труб)', 'Категория:Природный камень', 'Поперечный уклон дорожного покрытия', 'Категория:Водонагреватели', 'Термопрофиль', 'Пронаос', 'Категория:Надвратные церкви', 'Модакриловые волокна', 'Герметизация', 'Фриз (архитектура)', 'Алагрек (орнамент)', 'Санфаянс', 'Монофора', 'Категория:Декоративное оформление оконных проёмов', 'Стекло ZBLAN', 'Союз дизайнеров СССР', 'Тракторные грабли', 'Вимперг', 'Дренажный колодец', 'Речевой информатор', 'Дзабутон', 'Антенно-мачтовое сооружение', 'Приспособление для женского мочеиспускания', 'Насыпная плотность', 'Закладная доска', 'Список самых высоких труб', 'Сушуар', 'Фасадный кирпич', 'Фонарь', 'Блок (строительство)', 'Нержавеющая сталь', 'Мультирум', 'Категория:Оптическое стекло', 'Водоснабжение Вены', 'Шабер', 'Родина-мать (Волгоград)', 'Категория:Умные колонки', 'Стойкость бетона', 'Бетон и железобетон', 'Мальта (нефть)', 'Газовый водонагреватель', 'Аудитория', 'Автоматизированная система контроля и учёта энергоресурсов', 'Криомассаж', 'Пеногипс', 'Интерконнектор Греция — Болгария', 'Категория:Академики Академии графического дизайна', 'Средокрестие', 'Шлифовальные машины', 'Бассейн с шариками', 'Принт', 'Кернер (инструмент)', 'Шахтный вентилятор', 'Категория:Бензопилы СССР', 'ISO 10487', 'Гидрофор', 'Фирменный бланк', 'Керамическая плитка', 'Заварочный чайник', 'Категория:Лампы', 'Гексамилион', 'Коридор', 'Подъёмная кровать', 'Управляющая сетка', 'Садовый инструмент', 'Обои', 'Стена Плача', 'Категория:Типы телевизионных приёмников', 'Ленточный фундамент', 'Лекторий', 'Анкер в грунте', 'Кварцевый песок', 'Графофон', 'Парфюмерный орган', 'КМ-1М', 'Стулпиньш', 'Стеклопакет', 'Угольная дуговая лампа', 'Барочный лес', 'Жилое помещение', 'Светодиодная лампа', 'Песочный человек', 'Адам стиль', 'Система адиабатического увлажнения воздуха', 'Болторез', 'HomeKit', 'Городской подвал (Краков)', 'Комната', 'Пассатижи', 'Филлит', 'Стол', 'Безраструбная чугунная канализация', 'Гипсокартон', 'Стремянка', 'Полевые магистральные трубопроводы', 'Несъёмная опалубка', 'Оджах', 'Полипропилен', 'Сиденье унитаза', 'Дымовая труба', 'Гидромассажный бассейн', 'Дантеска', 'Иероглифическая лестница (Копан)', 'Акротерий', 'Сайдинг', 'Канализация', 'Трулло', 'Ленточные глины', 'Бурдалю', 'Стабилитрон тлеющего разряда', 'Японские фонари', 'Шов строительных конструкций', 'Бронестекло', 'Железобетон', 'Асбоцемент', 'Шатёр (архитектура)', 'Верёвочная лестница', 'Посудомоечная машина', 'Противопролежневый матрас', 'Газопровод Магриб — Европа', 'Накидная гайка (сантехника)', 'Медиафасад', 'Категория:Водоснабжение и водоотведение Екатеринбурга', 'Рущтица (мрамор)', 'Восточно-средиземноморский трубопровод', 'Ямный туалет', 'Полуколонна', 'Светопрозрачный фасад', 'Дренажная решётка', 'Резолют (стол)', 'Индейская землянка', 'Квартира-студия', 'Категория:Помещения Древнего Рима', 'Лестница кровельная', 'Кафедра Святого Петра', 'Генеративный дизайн', 'Scooba', 'Категория:Бассейны по странам', 'Гетерогенная система', 'Дизайн взаимодействия с пользователем', 'Фальшпол', 'Тефифон', 'Хижина отшельника', 'Турка', 'Водоотлив', 'Список стран по производству цемента', 'Костробетон', 'Категория:Арки и своды', 'Мезонин', 'Пила Джильи', 'Стена Конради', 'Бытовая техника', 'Миксер', 'Гидроизоляция', 'Толь', 'Угловая шлифовальная машина', 'Искусства и ремёсла', 'Лекальный кирпич', 'Затирочная машина', 'Неодимовое стекло', 'Категория:Соломенные здания', 'Немо 33', 'Зенкер', 'Тас Хыз', 'Туалет', 'Бутовая кладка', 'Аванзал', 'Мазанка', 'Абразивная пила', 'Полимербетон', 'Метопа', 'Цепная пила', 'Жироловка', 'Проигрыватель грампластинок', 'Металлогалогенная лампа', 'Кочерга', 'Категория:Глины', 'Северное стекольно-промышленное общество', 'Налог на общественные туалеты', 'Механическое сопряжение', 'Формы крыш', 'Полиэфирный листовой прессматериал', 'Категория:Каменоломни', 'Маячковая лампа', 'Категория:Гранитные купола', 'Экосанитария', 'Категория:Павильоны', 'Кабинет', 'Категория:Кровельные материалы', 'Ринсо', 'Гигиенический душ', 'Столик-матрёшка', 'Категория:Типы помещений на кораблях', 'Берёста', 'Пилястра', 'Электрическая дисковая пила', 'Коттеджинг', 'BBL (газопровод)', 'Категория:Стеклоделы', 'Порошковая окраска', 'Солнечный коллектор', 'Платформенные раздвижные двери', 'Тачка', 'Асфальтоукладчик', 'Трон Алексея Михайловича', 'Эффективно заземлённая нейтраль', 'Памятники садово-паркового искусства', 'Смальта', 'Канализационная установка', 'Ковролин', 'Парта', 'Мавританский газон', 'Трубопроводный кран', 'Подводка (сантехника)', 'Распределитель питания', 'Снос здания', 'Электрощитовая', 'Умный выключатель', 'Дельта-древесина', 'Категория:Стены', 'Лущильник', 'Осветительные установки', 'Печь Утермарка', 'Категория:Облицовочные материалы', 'Гинекологическое кресло', 'Санузел', 'Медная кровля', 'Бетонный пол', 'Категория:Вентиляторы', 'Грабли', 'Асфальтовый вулкан', 'Плафон', 'Испарительные поверхности нагрева', 'Категория:Кремлёвская стена', 'Трельяж', 'Категория:Венецианское стекло', 'Вальцовая сушилка', 'Категория:Садовые инструменты', 'Приватизация общественных туалетов', 'Туалетная революция в Китае', 'Закомара', 'Модульное напольное покрытие из пвх', 'Карусель', 'Картофелечистка', 'Императорский трон (Финляндия)', 'Взрывы газопровода в Гаосюне (2014)', 'Сенежская студия', 'Триплекс', 'Раковина для рвоты', 'Рольставни', 'Крыльцо', 'Сбросной клапан (сантехника)', 'Композитные опоры ВЛ', 'Асфальт', 'Красно-синий стул', 'Стекловата', 'Полиарилаты', 'Безреактивный молоток', 'Фасадная кассета', 'Дренаж', 'Полигональная кладка Гаубеца', 'Патефон', 'Люкарна', 'Калининградская ТЭЦ-1', 'Категория:Мебельные гарнитуры', 'Котёл-утилизатор', 'Бентонит', 'Софит', 'Декор', 'Аквапарк', 'Портик', 'Категория:Синтетические смолы', 'Вакуумно-люминесцентный индикатор', 'Бетоносмесительный завод', 'Ночник', 'Камергер стула', 'Шахматный стол', 'Гамак', 'Формула Барлоу', 'Свайный фундамент', 'Молоток судьи', 'Ворота Балавата', 'Выравнивающий ток', 'Газошлакобетон', 'Электропрогрев бетона', 'Категория:Мебель в искусстве', 'Силикальцит', 'Масляный обогреватель', 'Туалеты в Японии', 'Категория:Электроотопительные приборы', 'Вальмовая крыша', 'Триммер (газонокосилка)', 'Вазон', 'Зона санитарной охраны', 'Тюльпан (кресло)', 'Чименея', 'Беседка', 'Офисная мебель', 'Плинтус', 'Категория:Ремонт автомобиля', 'Свеча Яблочкова', 'Шифер', 'Снегоплавильная опрыскивательная система', 'Амфиболит', 'Категория:Конкурсы дизайна', 'Трековое освещение', 'Химический туалет', 'Категория:Прорывы трубопроводов', 'Категория:Дизайн мебели', 'Категория:Трапезные палаты', 'Категория:Гидромассаж', 'Этажерка', 'Центр электрических нагрузок', 'Бойлер', 'Ердик', 'Электрический стул', 'Вяжущие вещества', 'Алюминиевые композитные панели', 'Очаг', 'Категория:Садовые украшения', 'СХМ-48', 'Светильник', 'Шанигартен', 'Арбоархитектура', 'Кирпичная кладка', 'Крюйт-камера', 'Категория:Стиральные машины', 'Категория:Унитазы', 'Чхолли чонсон', 'Ассамблейная', 'Категория:Пластмассы', 'Боросиликатное стекло', 'Павильон', 'Категория:Древесные плиты', 'Надувная мебель', 'Смола древесная омыленная', 'Промышленный альпинизм', 'Категория:Виды мебели', 'Зал (значения)', 'Холодильник', 'Заплата', 'Категория:Переработка пластика', 'Машинка для стрижки волос', 'Дружба (бензопила)', 'Секс-робот', 'Гиперпрессованный кирпич', 'Мягкая мебель', 'Пергамин', 'Болюс (глина)', 'Роза (архитектура)', 'Каррарский мрамор', 'Категория:Помещения в жилище', 'Геотермальный тепловой насос', 'Категория:Камни', 'Категория:Молоты', 'Пейзажный парк', 'Дверная коробка', 'Отвёртка', 'Масугуми', 'Каменный топор', 'Категория:Чайники', 'Гейсон', 'Категория:Электрические подстанции', 'Алмазная резка', 'Кенотрон', 'Чегет (кресло)', 'Категория:Стулья', 'YPbPr', 'Гидравлические потери', 'Спарклайн', 'Полиуретановые герметики', 'Стеклообразное состояние', 'Антаблемент', 'Ручные пружинные весы', 'Ризалит', 'Молоток Физделя', 'Ночной горшок', 'Сосулька', 'Подвал под баранами', 'Глубинный дренаж', 'Колоннада', 'Контактная сеть', 'Перколятор', 'Садовый аэратор', 'Шезлонг', 'Гудрон', 'Апопатофобия', 'Трон Бориса Годунова', 'Туалет-музей (Ижевск)', 'Категория:Архитектура инков', 'ЛВЛ-Брус', 'Саламандра (кулинария)', 'Часовой шкаф', 'Категория:Газовые трубопроводные компании', 'Сантехнические перегородки', 'Группа безопасности котла (сантехника)', 'Категория:Триоды', 'Апартаменты Короля (Версаль)', 'Лобзик', 'Гидроуровень', 'Электрический предохранитель', 'Категория:Залы Московского Кремля', 'Лейка', 'Этаж', 'Красный уголок', 'Плеер (проигрыватель)', 'Конвектор', 'Категория:Терракота', 'Гидромассаж', 'Абака (архитектура)', 'Солома', 'Антресоль (мебель)', 'Мемориальная скамья', 'Категория:Асфальт', 'Категория:Аквапарки', 'Локер', 'Электробытовая техника', 'Биллитонит', 'Медный рубин', 'Кариатида', 'Скороварка', 'Галтель', 'Крэппер, Томас', 'Стабилизированный оксидом иттрия диоксид циркония', 'Пенопласт', 'Категория:Ворота по городам', 'Glory hole', 'Метод монтажа ЛЭП «Под тяжением»', 'Карта из Мадабы', 'Электрическая плита', 'Сетевой фильтр', 'Тепловой зонтик', 'Кирпичная готика', 'Полиграфический дизайн', 'Умная розетка', 'Ваяльная глина', 'Категория:Магнитофоны', 'Дизайн', 'Облицовочный кирпич', 'Категория:Клеёные деревянные конструкции', 'Категория:Залы музеев', 'Вводно-распределительное устройство', 'Портал:Дизайн', 'Акустические материалы', 'Фонарь (дайвинг)', 'Биологическая коррозия бетона', 'Категория:Телевизионные приёмники СССР', 'Категория:Технологии быстрой зарядки', 'Галогенная лампа', 'Кан (печь)', 'Стеклянный пол', 'DVD-проигрыватель', 'Эмульсионные краски', 'Темзенское водопроводное кольцо', 'Линолеум', 'Андерсенград', 'Формула Хазена — Вильямса', 'Термопот', 'Гидравлический режим', 'Капсульная кофеварка', 'Электронно-механический преобразователь', 'Пахса', 'Клинкерный кирпич', 'Сушильный шкаф', 'Накидка для подушек', 'Телевизор', 'Земляные работы', 'Расстрел (распорка)', 'Набукко (газопровод)', 'Нейлон-66', 'Жирберг', 'Русская мебель', 'Детская площадка памяти принцессы Дианы', 'Dustbot', 'Мороженица', 'Атташ', 'Игорный стол', 'Черепица', 'Карболит', 'Канальный нагреватель', 'Аркада (архитектура)', 'Категория:Книжные шкафы', 'Категория:Битумы', 'Категория:Газонаполненные пластмассы', 'Универсальный пульт дистанционного управления', 'Категория:Железобетон', 'Геридон', 'Металлополимерные трубы', 'Туалетный юмор', 'Научно-исследовательский институт бетона и железобетона', 'Джебена', 'Электрический котёл', 'Оконные плёнки', 'Гладильный каток', 'Окно', 'Цветовой миксер', 'Конха', 'Бетоноукладчик', 'Электрический разветвитель', 'Гардеробное помещение', 'Тетрод', 'Пакгауз', 'Скальола', 'Henry Hub', 'Цемянка', 'Технические средства защиты авторских прав', 'Раковина (сантехника)', 'Категория:Мебель для предприятий торговли', 'Расстеклование', 'Ланкаширский котёл', 'Клеть', 'Мачете', 'Сэндвич-панель', 'Распределительный щит', 'Строительные материалы', 'Полиэтилен', 'Жалюзи', 'Flicker fixer', 'Гибкое бетонное покрытие', 'Категория:Музеи дизайна', 'Крымский мрамор', 'Жидкая резина', 'Категория:Фильмы о дизайне', 'Взрыв газопровода в Москве (2009)', 'Газонокосилка', 'Битва при Иссе (мозаика)', 'Сетчатая оболочка (архитектура)', 'Ледоруб', 'AeroPress', 'Котлован', 'Луковичная глава', 'Венская мебель', 'Категория:Бетонные мосты', 'Олифа', 'Категория:Термопласты', 'Брусчатка', 'Категория:Разъёмы ламп', 'Неоновая лампа', 'Шторы', 'Престол (епископский)', 'Оконный кондиционер', 'Натуральный каменный шпон', 'Гридль', 'Глиногипс', 'Домашняя автоматизация', 'Гранит', 'Хлебопечка', 'Массивная доска', 'Поливинилхлоридные мембраны', 'Ремонт (значения)', 'Ориентированно-стружечная плита', 'Категория:Дизайнерские компании', 'Садовые гномики', 'Предохранительная арматура', 'Категория:Детали юрты', 'Лавсан', 'Список стеклянной лабораторной посуды и стеклянного лабораторного оборудования', 'Корреализм', 'Композитная арматура', 'Фен', 'Кивер (архитектура)', 'Капитель', 'Трюм', 'Категория:Раскладная мебель', 'Лавка (мебель)', 'Водотрубный котёл', 'Кафе «Восьмиугольник»', 'Ступенчатый щипец', 'Структурная изолированная панель', 'Диффузор (гидроаэродинамика)', 'Диод', 'Пол (настил)', 'Катаро-турецкий газопровод', 'Кросснесская насосная станция', 'Снежное укрытие', 'Лампа-фара', 'Поезд-пылесос Петербургского метрополитена', 'Солнечный водонагреватель', 'Исландские дерновые дома', 'Тетива лестницы', 'Скрытый крепёж', 'Кабельная система обогрева', 'Категория:Квартиры', 'Индошинит', 'Отвод (трубы)', 'Столовая (помещение)', 'Мизерикордия (полочка)', 'Сваи Франки', 'Восьмерик', 'Целлулоид', 'Операционный стол', 'Гирька', 'Гидравлическая известь', 'Линеарная панель', 'Парус (архитектура)', 'Ревизионный люк', 'Биде', 'Молоток Кашкарова', 'Паучок (снаряд)', 'Детский манеж', 'Пандус', 'Стеллаж', 'Плитный фундамент', 'Френч-пресс', 'Профилированный лист', 'Свая', 'Остановка общественного транспорта', 'Макадам', 'Поли-пара-ксилилен', 'Насос', 'Платяной шкаф (Хроники Нарнии)', 'Арка', 'Технический углерод', 'Архитектоника', 'Категория:Бисер', 'Велариум', 'Туалетный стол', 'Сандрик', 'Стиральная машина', 'Фотокаталитический бетон', 'Категория:Обойные предприятия', 'Зенковка', 'Категория:Залы славы', 'Главный командный пункт', 'Пайкерит', 'Аэроватт', 'Шкаф', 'Лимские балконы', 'Столб (архитектура)', 'Полоса препятствий', 'Унирем', 'Категория:Производители телевизоров', 'Утюг', 'Дизайн аквариума', 'Стекломагниевый лист', 'Домофон', 'Фойе', 'Окулюс', 'Нильская мозаика', 'Категория:Интеллектуальная бытовая техника', 'Hi-Fi', 'Гидросеялка', 'Объёмно-модульное домостроение', 'Силикатный кирпич', 'Стеклопор', 'Лестница Джокера', 'Постелум', 'Категория:Газобетон', 'Эксплуатируемая кровля', 'Терраццо (напольное покрытие)', 'Бельведер', 'Притвор', 'Категория:Городские стены', 'Тимпан (архитектура)', 'Надземный переход', 'Композитные опоры освещения', 'Конструкция (искусство)', 'Малые апартаменты Короля', 'Канализационный коллектор', 'LinuxMCE', 'Кипятильник', 'Тактильное покрытие', 'Паркет', 'Инъектирование', 'Арт-дизайн', 'Глина', 'Самовар', 'Резиновая плитка', 'Глава (архитектура)', 'Ксеноновая дуговая лампа', 'Ручная пила', 'Бильярдный стол', 'Категория:Мебель для административных помещений', 'KNX', 'Детский монитор', 'Армобетон', 'Консольный фундамент из соединённых рандбалкой блоков', 'Известняк', 'Shape grammar', 'Весы', 'Гаечный ключ', 'Мансардная крыша', 'Шебеке', 'Древесный уголь', 'Бристольская шкала формы кала', 'Интерьер', 'Эркер', 'Ендова (строительство)', 'Международный плавательный центр Толлкросс', 'Гирлянда', 'Кофеварка эспрессо', 'Категория:Тумбы', 'Метакаолин', 'Схема теплоснабжения', 'Октод', 'Автономное здание', 'Металлочерепица', 'Туалет на Газетном', 'Архивольт', 'Амбиграмма', 'Курульное кресло', 'Комбинированная лампа', 'CR-39', 'Антидинатронная сетка', 'Категория:Машины для бетонных работ', 'Категория:Мостовые конструкции', 'Блочно-модульная котельная', 'Электрический обогреватель', 'Трон Михаила Фёдоровича', 'Категория:Геотехнические изыскания', 'Балдахин', 'Готический переплёт', 'Кронштейн', 'Антипирен', 'Натяжной потолок', 'Ретро', 'Центр водных видов спорта (Лондон)', 'Автоцементовоз', 'Дверь', 'Клапан переменного расхода воздуха VAV', 'Шлакоблок', 'Доломитовая мука', 'Bluetooth с низким энергопотреблением', 'Циполин', 'Паровое отопление', 'Зольнхофенский известняк', 'Функциональный комфорт', 'Гайковёрт', 'Кил (глина)', 'Ранкенверк', 'Институт стекла', 'Подзор', 'Суйкинкуцу', 'Теплосчётчик', 'Водяная розетка', 'Гунши', 'Кассоне', 'Заглушка (теплотехника)', 'Основание строения', 'Электрический лобзик', 'Косилка (сельхозмашина)', 'Лодская мозаика', 'Фонтан', 'Категория:Мебель', 'Ляпинская котельная', 'Geberit', 'Категория:Электронные лампы производства СССР', 'Полиолефины', 'Трап (санитарно-техническое оборудование)', 'Категория:Промышленность бытовых приборов и машин', 'Категория:Дверная фурнитура', 'Категория:Органическое стекло', 'Садово-парковая скульптура', 'Цифровая фоторамка', 'Стропила', 'Пеллетный котёл', 'Нурикабэ (мифология)', 'Напольный унитаз', 'Кельма', 'Хомут (техника)', 'Перемычка (архитектура)', 'Арматура (строительство)', 'Параметры Тиля — Смолла', 'Категория:Декоративное оформление стен', 'Категория:Элементы фортификационных сооружений', 'Бумбокс', 'Проникающая гидроизоляция', 'Балансировка камней', 'Полигональная кладка', 'Римские шторы', 'Динасовые огнеупорные изделия', 'Медицинская кровать', 'Теплоутилизатор', 'Стол для переговоров Владимира Путина', 'Микротоннелирование', 'Антрвольт (архитектура)', 'Алькеж', 'Лента для механического пианино', 'Гальюн', 'Netping', 'Компьютерный стол', 'Капучинатор', 'Склад', 'Датчик открытия', 'Эрмитаж (павильон)', 'Полка (мебельное изделие)', 'Bluetooth', 'Гильош', 'Лампа Дэви', 'Аркатура', 'Категория:Известняк', 'Детская площадка', 'Рафшторы', 'Дренажная труба', 'Категория:Белгородская стена', 'Фундамент', 'Строительный раствор', 'Напильник', 'Стеновые панели МДФ', 'Турель (архитектура)', 'Дымовая труба Анаконды', 'Кран Маевского', 'Древесно-стружечная плита', 'Проконнесский мрамор', 'Шпросы', 'Пароочиститель', 'Кровать', 'Московский технологический университет (ВНИИТЭ)', 'Рефлексоль', 'Водозаборные сооружения', 'Перекладина', 'Гравитационный бетоносмеситель', 'Праздник фонарей', 'Система управления освещением', 'Серп', 'Класс (помещение)', 'Плавательный бассейн Перта', 'Неавтоклавный газобетон', 'Очистка сточных вод', 'Категория:Ремонтные компании Казахстана', 'Садовый нож', 'Кухня (помещение)', 'Отбивочный шнур', 'Вырубка (отходы)', 'Категория:Гиперболоидные конструкции', 'Блиндаж', 'Амбушюры (наушники)', 'Персональный робот', 'Вулканический туф', 'Забор под напряжением', 'Повторное использование сточной воды', 'Строительный блок', 'Эвапорация', 'Сварная сетка', 'Проходческий щит', 'Категория:Производители железобетонных изделий', 'Обушок (инструмент)', 'Регулирующая арматура', 'Станция закрытого типа', 'Рубероид', 'Экседра', 'Ортопедический стул', 'Эмпоры', 'Категория:Мебель для предприятий общественного питания', 'Душ', 'Стена Реформации', 'Лестница Петара Кружича', 'Бальный зал', 'Тиратронный передатчик для дальней радионавигации', 'Категория:Напольные покрытия', 'Экстерьер', 'Общественный писсуар', 'Электронный замок', 'Post It Awards', 'Плетень', 'Категория:Роботы-пылесосы', 'Мусоропровод', 'Водоканал Санкт-Петербурга', 'Категория:MP3-плееры', 'Кусторез', 'Z-Wave', 'Многослойные клеёные деревянные панели', 'Минеральная вата', 'Квинзи', 'Категория:Вискоза', 'Твердотопливный котёл', 'Инвалидная коляска', 'Соха (орудие)', 'Категория:Надвратные колокольни', 'Фестон (архитектурный элемент)', 'Топпинг (строительство)', 'Категория:Экологический дизайн', 'Инфракрасное отопление', 'Щипцы для орехов', 'Безнапорный поток', 'Шамот', 'Вестверк', 'Гидравлическое разрушение', 'Категория:Устройство телевизора', 'Асфальтобетон', 'Категория:Детская площадка', 'Тамбурат', 'Гарман (сельскохозяйственное орудие)', 'Колонна', 'Винтовые сваи', 'Категория:Бетон', 'Прорезиненный асфальт', 'ТЭК СПб', 'Штопка', 'Фильмостат', 'Ячеистый бетон', 'Кирпич', 'Информационный дизайн', 'Молот', 'КТ-1М', 'Y-40 Deep Joy', 'Порог (жилище)', 'Типографика', 'Категория:Футуродизайн', 'Бомбовый погреб', 'Marmomac', 'Зубило', 'Крыша', 'Альпийская горка', 'Туф', 'Моушн-дизайн', 'Надписи в туалете', 'Плавающий фундамент', 'Вороток (инструмент)', 'Газон', 'Аргандова лампа', 'Категория:Системы обработки звука', 'Флюгер', 'Категория:Сельскохозяйственные роботы', 'Кашпо', 'Болдвинская лестница', 'Быстровозводимые здания', 'Карахафу', 'Бюро (мебель)', 'Раскрепованный ордер', 'Вспученный перлит', 'Цементно-стружечная плита', 'Ленточная пила', 'Пенобетон', 'Коммуникационный дизайн', 'Австралит', 'Медицинское стекло', 'Буржуйка', 'Повал (архитектура)', 'Категория:Умный дом', 'Живая изгородь', 'Горельеф', 'Платинотрон', 'Кафедра Максимиана', 'Коммунальная квартира', 'Подушка', 'Опалубка', 'Минеральные добавки для цементов, бетонов и строительных растворов', 'Андаруни', 'Стабилизированная древесина', 'Помещение', 'Категория:Ворота', 'Мангал', 'Безэлектродная лампа', 'Минимализм (дизайн)', 'Вращающаяся дверь', 'Категория:Швейные машины', 'Главный распределительный щит', 'Консольный стул', 'Стена Цоя', 'Кожаные обои', 'Категория:Древесные материалы', 'Гравировка стекла', 'Категория:Трубопроводная арматура', 'Книга Букв', 'Капитальный ремонт', 'Керамический блок', 'Умное здание', 'Булыжник', 'Импост', 'Геотекстиль', 'Полиакрилаты', 'Корси (мебель)', 'Категория:Гранит', 'Терразит', 'Навоз', 'Котелец', 'Пуф (мебельное изделие)', 'Подъёмник для туалета', 'Потерна', 'Радиатор отопления', 'Плавающие полы', 'Спессартит', 'Наушники', 'Карбофракс', 'Стекло', 'DALI', 'Категория:Смартфоны', 'Фритюрница', 'Блок-контейнер', 'Лампворк', 'Гидрофильтр', 'Индукционная плита', 'Шпунт Ларсена', 'Категория:Журналы о дизайне', 'Категория:Медицинская мебель', 'Переход эксцентрический', 'Солнцерезы', 'Противопожарная дверь', 'Хризантемовый трон', 'ЭПЧ-3', 'Спальный мешок', 'Горка (мебель)', 'I-d диаграмма влажного воздуха', 'Воздушное отопление', 'Тепловой аккумулятор', 'Минетта (горная порода)', 'Рибекит', 'Гипокауст', 'Категория:Залы', 'Категория:Мраморные здания и сооружения', 'Инженерная доска', 'Армоцементные конструкции', 'Сучкорез', 'Категория:Операционные системы для интеллектуальной бытовой техники', 'Категория:Диваны', 'Перибол', 'Категория:Производители огнеупоров', 'Кафедра (христианство)', 'Категория:Трубопроводы по странам', 'Парадный вход', 'Бесконечный бассейн', 'Категория:Лестницы по странам', 'Категория:Мастера художественного стекла', 'Термоформовочные пластики', 'Вывертка', 'Микрогранулы', 'Отопительный котёл', 'Жидкие гвозди', 'Писсуар', 'Калитка', 'Тетраконх', 'Иглу', 'Трубопроводная арматура', 'Медальон', 'Категория:Ограждения', 'Эттрингит', 'Романцемент', 'Лангелед', 'Силикатная промышленность', 'Крупная бытовая техника', 'Каолин', 'Древесноволокнистая плита', 'Термомеханическая масса', 'Пилон', 'Бутовый фундамент', 'Категория:Шкафы', 'Поветь', 'Категория:Настенные мозаики', 'Категория:Котельные', 'Гладильная доска', 'Пылесос', 'Электрический удлинитель', 'Эвакуационный выход', 'Категория:Незавершённые статьи о мебели', 'Категория:Гидроизоляционные материалы', 'Категория:Эмаль', 'Лучевой тетрод', 'Категория:Этиленопроводы', 'Гобо (освещение)', 'Поверхностный дренаж', 'Скай-лобби', 'Вентиляционная шахта', 'Кинетическая типографика', 'Фуст (архитектура)', 'Фонограф', 'Серобетон', 'Притолока', 'Искусственный акриловый камень', 'Гибридная операционная', 'Категория:Промышленный дизайн', 'Вулканическое стекло', 'Безопасное прослушивание', 'Вода затворения', 'Батарейные фонари СССР', 'Деревня бори', 'Электрогриль', 'Бородок', 'Мостовая', 'Подвал поэтов', 'Когнитивные измерения', 'Дизайн интерьера', 'Универсальный дизайн', 'Категория:Изделия из глины', 'Пластигломерат', 'Эдикула', 'Клоацина', 'Шликер', 'Опалубочные вкладыши', 'Камин', 'Микропластик', 'Эластомер', 'Соковыжималка', 'Зыбучий песок', 'Навес', 'Туалет самолёта', 'Лантерна', 'Категория:Скульптуры из мрамора', 'Бортовой камень', 'Рулевая рубка', 'Искусственная отделка', 'Пазуха сводов', 'Категория:Пенопласт', 'Проникающие грунтовки', 'Категория:Христианские кафедры', 'Чистая вода (целевая программа)', 'Постельное бельё', 'Биоцемент', 'Опора трубопровода', 'Счётчик гектаров', 'Corporate Memphis', 'Редуктор давления воды', 'Лестница Иакова', 'Кулер (система охлаждения)', 'Категория:Дизайнеры', 'Офактуренный кирпич', 'Железобетонное судостроение', 'Ёмкостная безэлектродная лампа', 'Гульбище', 'Плинфа', 'Лампа накаливания', 'Вертикальный сад', 'Скамья', 'Царь-молот', 'Категория:Сетевые медиаплееры', 'Кольцевая пила', 'Gorilla Glass', 'Плуг', 'Категория:Мебельные изделия', 'Категория:Каменный век', 'Музыкальная подвеска', 'Древесно-слоистый пластик', 'Комбайностроение', 'Терраса (архитектура)', 'Кварцевое стекло', 'Категория:Сверхвысокие дымовые трубы', 'Магнезиальный цемент', 'Канализационный люк', 'LC4', 'Откосное лекало', 'Поликарбонаты', 'Габион', 'Циклопическая кладка', 'Электроводонагреватель', 'Тромп (архитектура)', 'Музыкальный автомат', 'Вестибюль', 'Жидкое стекло', 'Вытяжной шкаф', 'Тиратрон', 'Буровзрывные работы', 'Корпоративная идентичность', 'Защитно-улавливающая сетка', 'Транквилизатор (стул)', 'Категория:Кровати', 'Категория:Светопрозрачные конструкции', 'Категория:Коммуникативный дизайн', 'Стеклоделие', 'Les Arts Décoratifs (организация)', 'Бытовой робот', 'Категория:Строительные плиты', 'Категория:Газопроводы по странам', 'Карбид кремния', 'Кухонная мойка', 'Плитняк', 'Молдавит', 'Сантехнический трос', 'Флакон из Новогрудка', 'Тригатрон', 'Монолитные конструкции', 'Пальметта', 'Молдинг', 'Двери для животных', 'Категория:Усиление строительных конструкций', 'Приз Луннинга', 'Сундук', 'Карамон', 'Битуминозные пески', 'Шлак', 'Категория:Модульный принцип', 'Леер', 'Кушетка', 'Боскет', 'Янтарная комната', 'Автомобильный шноркель', 'NEL', 'Категория:Интерьер', 'Категория:Пески Казахстана', 'Примус', 'Категория:Промышленные сети', 'Котельное отделение', 'Фасадная система', 'Пеноблок', 'Категория:Электронные лампы', 'Цзы-гу', 'Инкерманский камень', 'Категория:Мебель для сидения (лежания)', 'Мостостроение', 'Категория:Водопровод', 'Травертин', 'Котёл верхнего горения', 'ILife A40', 'Цементный клинкер', 'Категория:Локомотиворемонтные предприятия', 'Ходовая рубка', 'Стена Леннона', 'Ножницы', 'Вальма', 'Автоматические платформенные ворота', 'Автоклавный газобетон', 'Встроенный пылесос', 'Банная печь', 'Жидкие обои', 'Португальский тротуар', 'Каменная баба', 'Лимоновыжималка', 'Вильчак (архитектура)', 'Безосколочное стекло', 'Киоск', 'Качели-балансир', 'Серпентинит', 'Электрическая сеть', 'Фынг', 'Категория:Нефтепроводы', 'Русское стекло', 'Грелка', 'Гутты', 'Кофейный автомат', 'Декроттуар', 'Раздвижные двери', 'Туалетная бумага', 'Рейнский шлем (архитектура)', 'Номинальное давление', 'Съёмщики кроватей', 'Геодезический купол', 'Наука о стекле в творчестве М. В. Ломоносова', 'Модуль крупности', 'Дизайн-система', 'Бельэтаж (архитектура)', 'Интерьерные макеты', 'Глинозёмистый цемент', 'Кружевной партер', 'Тугоплавкие металлы', 'Аэрогриль', 'Обрешётка', 'Балка (техника)', 'Полиизоцианурат', 'Канефора', 'Каменная вата', 'Фотообои', 'Газотрон', 'Колосниковая решётка', 'Газосиликат', 'Асфальтены', 'Теплоизоляция', 'Красноярская ТЭЦ-4', 'Костяной трон Ивана Грозного', 'Категория:Незавершённые статьи о дизайне', 'Формокомплект', 'Верстак', 'Вступительные титры', 'Калькаренит', 'Душевая кабина', 'Каменный шпон', 'Монолитный пенобетон', 'Логотип', 'Хапиловская канализационная насосная станция', 'Излив', 'Наливной пол', 'Несущая конструкция', 'Тент', 'Полифора', 'Реактопласты', 'Интерьерное озеленение', 'Комбайн (журнал)', 'Шпалерные ножницы', 'Smart TV', 'Мергель', 'Категория:Сундуки', 'Фиал (архитектура)', 'Дынька', 'Международная ассоциация сантехников и механиков', 'Вентиляционная шахта (метро)', 'Стояночный отопитель', 'Категория:Бытовая электроника', 'Lorem ipsum', 'Техническое подполье', 'Фашина', 'Стена Цоя (Морское)', 'Тканевая ролета', 'Полимерная глина', 'Трансадриатический газопровод', 'Вентиляторный доводчик', 'Торкретирование', 'Кровельное ограждение', 'Альков', 'Электропроигрывающее устройство', 'Каюта', 'Горячее водоснабжение', 'Книгохранилище', 'Медиадизайн', 'Категория:Газопроводы', 'Теплоснабжение', 'Картонная мебель', 'Apartment Therapy', 'Дербентская стена', 'Противодымная защита зданий и сооружений', 'Уступ (архитектура)', 'Надземная прокладка трубопроводов', 'Воздуходувка', 'Цоколь', 'Бетонно-растворная установка', 'Трюмо (архитектура)', 'Bi-wiring', 'Массажное кресло', 'Эолова арфа', 'Категория:Комбайны по производителям', 'Юрский мрамор', 'Поля фильтрации', 'Анты (архитектура)', 'Закалённое стекло', 'Боги туалета', 'Пентод', 'Кобальтовое стекло', 'Домашний кинотеатр', 'Категория:Мебель по векам', 'Буфет (мебель)', 'Каталитическая горелка', 'Песчаник', 'Шуруповёрт', 'Гейзерная кофеварка', 'Категория:Апартаменты', 'Пердёжный юмор', 'Бетонный канал', 'Параша (сосуд)', 'Детская комната', 'Газопровод', 'Мясорубка', 'Камнелитейное производство', 'Крышные котельные', 'Штраба', 'Трилинка', 'Категория:Графит', 'Бетононасос', 'Silky', 'Шебби-шик', 'Цилиндрический свод', 'Виньетка', 'Цеп', 'IAPMO R&T', 'Композитная сетка', 'Дентикул', 'Офис', 'Крабб', 'Брамантово окно', 'Палочка-подтирка', 'Коррозия арматуры', 'Сима (архитектура)', 'Щепа для копчения', 'Палладиево окно', 'Встроенная мебель', 'Древесная группа', 'Кубок из Новогрудка', 'Арматура (архитектура)', 'Стемалит', 'Категория:Месторождения асбеста', 'Матирование стекла', 'Категория:Гранитные здания и сооружения', 'Цепь цепной пилы', 'Категория:Внутренняя реклама', 'Римская стена (София)', 'Грязезащитные системы', 'Шпаклёвка', 'Категория:Утюг', 'Дождевая канализация', 'Красная глубоководная глина', 'Архитектурное решение', 'Категория:Кухонная техника', 'Verro', 'Туфобрекчия', 'Greenstream', 'Петли монтажные (подъёмные)', 'Падуга', 'Мультимедиастанция', 'Бамбуковая жена', 'Клеристорий', 'Артезианская скважина', 'Прокладка трубопровода', 'Категория:Троны', 'Категория:САПР', 'Balticconnector', 'Челиев, Егор Герасимович', 'Доминирующий дизайн', 'Сваг', 'Софа', 'Стеклоомывающая жидкость', 'Категория:Инфраструктура водоснабжения', 'Макетная плата', 'Южно-Кавказский газопровод', 'История дерьма', 'Нерозин', 'Ландшафтный дизайн', 'Въездная арка', 'Ретейл-дизайн', 'Категория:Виды мебели по конструктивным признакам', 'Тарбеклаас', 'История дизайна', 'Ложная дверь', 'Полотенцесушитель', 'Категория:Фасады', 'Категория:Глинобитные здания и сооружения', 'Категория:Мебельные подставки', 'Кровельный аэратор', 'Категория:Сценография', 'Оттяжка (строительство)', 'Световой дизайн', 'Ограда', 'Сетка (электронная лампа)', 'Барельеф', 'Мрамор', 'Термоволновой душ', 'Внутренняя реклама', 'Каболка', 'Подставка для ног', 'Яндекс.Модуль', 'Скальный молоток', 'Керамзит', 'Доссаль', 'Категория:Отделочные материалы', 'Камбуз', 'Гидравлический удар', 'Джрухи', 'Гранитизация', 'Саранская ТЭЦ-1', 'Категория:Лесоматериалы', 'Пенокартон', 'Робот-пылесос', 'Вацу', 'Котацу', 'Звуковой дизайн', 'Вилы', 'Ворота святого Джеймса', 'Травея', 'Лестница Гана', 'Категория:Помещения Древней Греции', 'Портландцемент', 'Категория:Туалет', 'Стена', 'Бисер', 'Подвал', 'Защита от дурака', 'Параметрический дизайн', 'Серая вода', 'Перина', 'Георешётка', 'Ступени Рокки', 'Пустотность заполнителя', 'Категория:Скульптуры из бетона', 'Энергосбыт', 'Кушетка Рекамье', 'Жердь', 'Резиновая крошка', 'Скатная крыша', 'Пеперин', 'Габет', 'Апартаменты Борджиа', 'Категория:Незавершённые статьи об интерьере', 'Румпельное отделение', 'Категория:Подвалы', 'Категория:Подводные трубопроводы', 'Категория:Теплоснабжение в России', 'Аха', 'Газовое отопление', 'Лоджия', 'Категория:Мосты из известняка', 'Уход за бетоном', 'Качалка на пружине', 'Илосос', 'Категория:Погибшие в результате падения с лестницы', 'Сотовое окно', 'Царское место', 'Подиум (архитектура)', 'Приямок', 'Огнеупорный кирпич', 'Холодный чердак', 'Ограждение', 'Подковообразная арка', 'Ломберный стол', 'Топливные гранулы', 'Барботин', 'Остекление балконов и лоджий', 'Шпунт', 'Цемент', 'Известковые растворы', 'Акушерская кровать', 'Мочеприёмник', 'Крупорушка', 'Огнеупорные материалы', 'Hammerbeam-кровля', 'Категория:Витраж', 'Десюдепорт', 'Полимерные трубы', 'Журнальный стол', 'Районные электрические сети', 'Категория:Фонари', 'Битуминозные пески Ориноко', 'Кнорпельверк', 'Монтажный патрон', 'Лемех (архитектура)', 'Категория:Вентиляционное оборудование', 'Сятихоко', 'Серлиана', 'Категория:Залы США', 'Спальня', 'Водоканал Севастополя', 'Darkroom', 'Канализация на Украине', 'Трифолий (искусство)', 'Замковый ключ', 'Бензопила', 'Патио', 'Ножовка по дереву', 'Матроней', 'Фонокорректор', 'Категория:Персональные компьютеры', 'Стеклобой', 'Древесное волокно', 'Глиночурка', 'Гипсостружечная плита', 'Стул Басби', 'Рабатка', 'Категория:Русская печь', 'Мутул', 'Хибати', 'Грунтовка', 'Ступенчатый колодец', 'Кемекс', 'Двусветный зал', 'Стена коммунаров', 'Пластификаторы (пластмассы и полимеры)', 'Угольные горелки', 'Моноблок', 'Категория:Дорожные покрытия', 'Категория:Промышленные печи', 'Граммофон', 'Столетняя лампа', 'Аптекарская посуда', 'Категория:Качели', 'Дом-улей', 'Шкаф дайн', 'Категория:Злакоуборочные комбайны', 'Сломанный стул', '6L6', 'Категория:Игрушки-роботы', 'Teasmade', 'Немецкий музей обоев', 'Клочан', 'Охлупень', 'Категория:Мебельное производство', 'Кулуары', 'Ориентированное на пользователя проектирование', 'Мосводоканал', 'Бегунец', 'Кресло-мешок', 'К-36ДМ', 'Категория:Песок', 'Бульотка (самовар)', 'Фонарь (архитектура)', 'Термополированное стекло', 'Категория:Виды мебели по материалам изготовления', 'Автомобильный дизайн', 'Электростеклорез', 'Политетрафторэтилен', 'Сердобольский гранит', 'Автобетоносмеситель', 'Категория:Японский сад', 'Дресва', 'Пинакль', 'История стекла', 'Аба-вуа', 'Газобетон', 'Водонапорная башня', 'Матрац Рено', 'Аммосовская печь', 'Апартамент', 'Кессон (архитектура)', 'Сточный треугольник', 'Кабанчик', 'Развёртка (инструмент)', 'Источники водоснабжения', 'Бульотка (лампа)', 'Дренажная система', 'Гелиодон', 'Киот', 'Тротуарная плитка', 'Пеллетная горелка', 'Ионик (архитектура)', 'Талатат', 'Сланцевый шифер', 'Центрально-европейский газовый хаб', 'Категория:Целлюлоза', 'Моноблок (стул)', 'Садовый измельчитель', 'Глинистый сланец', 'Категория:Мебель для хранения', 'Киликейон', 'Домовая резьба', 'Цифровой счётчик', 'Категория:Фанера', 'Лампочка Ильича', 'XEL-1', 'Целлюлозное волокно', 'Водосточная система', 'Категория:Веб-дизайн', 'Кресло Барани', 'Терморегулятор', 'Тиски', 'Ламбри', 'Колыбель', 'Пожарный извещатель', 'Стол-тумба', 'Категория:Детали швейных машин', 'Борона', 'Sweet Home 3D', 'Бучардирование', 'Вентилируемый фасад', 'Бутовый камень', 'Камчатка (котельная)', 'Категория:Эластомеры', 'Кварцевая лампа', 'Мауэрлат', 'Обратная тяга', 'Гурт (архитектура)', 'Обратный клапан', 'Комод', 'Защитная арматура', 'Гаргулья', 'Водоснабжение', 'Машинное отделение', 'Горганская стена', 'Мейсель (стамеска)', 'Zigbee', 'Мансарда', 'Отбойный молоток', 'Отопление', 'Будуар', 'Категория:Персоналии:Железобетон', 'Алебастр', 'Боевая рубка', 'Вентиляция', 'Банкетка', 'Музей бетона', 'Crello', 'Категория:Здания и сооружения на сваях', 'Осиирэ', 'Категория:Бумага', 'Категория:Древнеримские ворота', 'Тектоника (искусство)', '3D-очки', 'OCPP', 'Бьюдский свет', 'Газовый резак', 'Насосы для цемента', 'Силос цемента', 'Ампула (сосуд)', 'Унитаз', 'Категория:Стеклянная архитектура', 'Категория:Стеклоочистители', 'Песчано-гравийная смесь', 'Светопрозрачные конструкции', 'Нонод', 'Битумный лак', 'Пемзобетон', 'Категория:Термореакты', 'Антефикс', 'Снегоплавильная установка', 'Каннелюра', 'Штрудльхофские лестницы', 'Ширма', 'Газотрубный котёл', 'Аэродизайн', 'Рулонный газон', 'Фанера', 'Крейцмейсель', 'Ниша', 'Бетон', 'Резьбовой напильник', 'Картуш', 'Чистое помещение', 'Категория:Декоративное оформление интерьера', 'Распылитель', 'Песок', 'Магический глаз', 'Гумбаз', 'Геомембрана', 'Мергель глинистый', 'Бакелит', 'Подводный трубопровод', 'Категория:Трёхфазная система электроснабжения', 'Сильфонный компенсатор', 'Койка', 'Водоснабжение Азербайджана', 'Данскер', 'D-Terminal', 'Управление водными ресурсами', 'Дворницкая', 'Газопровод Туркменистан — Китай', 'Британская высшая школа дизайна', 'Табернакль', 'Рисоварка', 'Брандмауэр', 'Категория:Асфальтобетон', 'Пеностекло', 'Галька', 'Мотыга', 'Асбестоцементный шифер', 'Хлопкоуборочная машина', 'Валашка', 'Известь (материал)', 'Техническая эстетика', 'Монтажная пена', 'Тройник', 'Медицинское судно', 'Монолитное строительство', 'Мел', 'Картины на рисовых полях', 'Гептод', 'Чалды', 'Айван', 'Дрель', 'Категория:Кирпичи', 'Категория:Цементные компании', 'Экопарковка', 'Кубок Святой Ядвиги из Новогрудка', 'Яйцеварка', 'Категория:Потолок', 'Лунное стекло', 'Купол', 'Тенсегрити', 'Ионизатор', 'Двухфазная электрическая сеть', 'Рудничные устройства защиты от токов утечки', 'Искусственный камень', 'Одеяло', 'Нувистор', 'Категория:Городские ворота', 'Молоток', 'Колун', 'Рукомойник', 'Плашка', 'Оцилиндрованное бревно', 'Термопласты', 'DLNA', 'Дам-вейтер', 'Батавские слёзки', 'Трансепт', 'Дощатые фермы с соединением в узлах на металлических зубчатых пластинах', 'Троны Астарты', 'Категория:Звуковоспроизводящая аппаратура', 'Газопровод «Запад — Восток»', 'Электронная крышка-биде', 'Каменные работы', 'Аромалампа', 'Диафрагма (измерение расхода)', 'Medgaz', 'Отстойник', 'Пластиковый канал', 'Фланец', 'Закрепление песков', 'Категория:Полы', 'Безмен', 'Тепловентилятор', 'Категория:Разделительные стены', 'Лешательерит', 'Урановое стекло', 'Герметик', 'Завалинка', 'Тибуриум', 'Магнезит (компания)', 'Воздушный фильтр', 'Круглая пила', 'Экодизайн', 'Мебельный гарнитур', 'Пила', 'Подвал (театр)', 'Маркиза (архитектура)', 'Grohe', 'Водопроводная вода', 'Поливинилиденфторид', 'Передняя', 'Умный замок', 'Двуручная пила', 'Газовый котёл', 'Хибинит', 'Гальпон', 'Газопровод BRUA', 'Токийский противопаводковый коллектор', 'Кофемолка', 'Аэротенк', 'Категория:Пожарная автоматика', 'Коноплеуборочный комбайн', 'Люфт-клозет', 'Тамбур', 'Вьюшка (печная заслонка)', 'Категория:Утраченные ворота', 'Вихревая топка', 'Простыня', 'Стержневая радиолампа', 'Оксид кальция', 'Кошачий лоток', 'Горн (очаг горения)', 'Чердак', 'Мультиварка', 'Офис открытого типа', 'Инфракрасный обогреватель', 'Раскладушка', 'Облом (архитектура)', 'Ассимиляция (вентиляция)', 'Мьёльнир', 'Чугунная ванна', 'Тумба (мебель)', 'Пудостский камень', 'Водоканал Новосибирска', 'SolveSpace', 'Сгон', 'Далла (кофейник)', 'Строительный перфоратор', 'Багет (интерьер)', 'Прогон', 'Категория:Кофейное оборудование', 'Взрыв газопровода в Сибири в 1982 году', 'Морозостойкость бетона', 'Трифорий', 'Категория:Губцевый инструмент', 'Категория:Мозаичные полы', 'Стяжка пола', 'Ретротроника', 'Этилен-пропиленовый каучук', 'Сигнатурка', 'Мастика (материал)', 'Китайский сад', 'ТАПИ (трубопровод)', 'Категория:Металлические конструкции', 'Категория:Помещения', 'Категория:Производители строительных материалов', 'Каплеуловитель', 'Абажур', 'Мешалка', 'Ондоль', 'Штучный паркет', 'IClebo Arte', 'Букраний', 'Лесное стекло', 'Потолочный вентилятор', 'Водосточный жёлоб', 'Категория:Боевые молоты', 'Moscow Flower Show', 'Категория:Звукозаписывающая аппаратура', 'ТПХ Русклимат', 'Проигрыватель компакт-дисков', 'Котельная', 'Йогуртница', 'Кухонная утварь', 'Апсида', 'Система Тихельмана', 'Оборонительные стены империи Сефевидов', 'Стамеска', 'Герметичная оболочка', 'Парапет', 'Архитектурное освещение', 'Микропористое стекло', 'Судно-трубоукладчик', 'Категория:Железобетонные мосты', 'Гостиная', 'Канализационная насосная станция', 'Гравий', 'Горний престол', 'Высокочистый кварцевый концентрат', 'Категория:Интерконнекторы', 'Кирпичный стиль', 'Позы дефекации у человека', 'Метчик', 'Водяное отопление', 'Вуссуар', 'Мебель', 'Октальный цоколь', 'Клиния', 'Секретер', 'Категория:Комбайнёры', 'Криптопортик', 'RCA (разъём)', 'DVD-рекордер', 'Нары', 'Траншея', 'Научно-исследовательский институт по вентиляции и очистке воздуха на горнорудных предприятиях', 'Категория:Концертные залы', 'Лампада', 'Газовый инфракрасный обогреватель', 'Комната для обморока', 'Категория:Ландшафтный дизайн', 'Lexy', 'Кулер (аппарат)', 'Дизайн-мышление', 'Строительные леса', 'Щебёночная свая', 'Пурбекский мрамор', 'Запорный клапан', 'Древесина', 'Древесно-полимерный композит', 'Асбест', 'Кровля', 'Категория:Железобетонные конструкции', 'Джакузи', 'Аспирация (вентиляция)', 'Небо (архитектура)', 'Рапакиви', 'Дранка', 'Тандыр', 'Категория:Овощеуборочные комбайны', 'Башня Ветров (Севастополь)', 'Термофор', 'Bticino', 'Бадгир', '3D-Coat', 'Ножовка по металлу', 'Приучение домашних животных к туалету', 'Hangzhou GreatStar Industrial', 'Кунай', 'Перепускной клапан', 'Моцарт и туалетный юмор', 'Футорка', 'Крайтрон', 'Матрас', 'Категория:Камни Ирландии', 'Двускатная крыша', 'Водовыпуск', 'Дизайн-менеджмент', 'Hipgnosis', 'Категория:Отопительная техника', 'Конопачение', 'Гриль', 'Постирочная', 'Кебеже', 'Биоактивное стекло', 'Железобетонные изделия', 'Погреб боеприпасов', 'Сталь', 'Водостоки Парижа', 'Дренажно-штольневая система', 'Теневые шарики', 'Путиловский известняк', 'Дорожный каток', 'Кронбалка', 'Торговое оборудование', 'Качели', 'Эхин', 'Обеденный стол', 'Категория:Мягкая мебель', 'Астрагал (архитектура)', 'Барная стойка', 'Темпер', 'Фотодетектор', 'Insulating concrete forms', 'Стена Карла V', 'Флигель', 'Солнечная печь (кулинария)', 'Лопатка (архитектура)', 'Круглогубцы', 'Картонный табурет', 'Холодная баня с Агатовыми комнатами', 'Трюмо (зеркало)', 'Водоотвод', 'Свод', 'Пергола', 'Пластиковые фламинго', 'Категория:Мрамор', 'Оформление книги', 'OPAL', 'Балясина (архитектура)', 'Категория:Методы очистки газовых смесей', 'Модульный паркет', 'Мон (ворота)', 'Микроволновая печь', 'Дорожная снегоплавильная система', 'START-PROF', 'Скабелло', 'Ассоциация промышленного дизайна (Италия)', 'Ремонт', 'Фрамуга', 'Гвоздезабивной пистолет', 'Марцано, Стефано', 'Крестоцвет', 'Керогаз', 'Аглопорит', 'Проходки для кровли', 'Штурманская рубка', 'Челурит', 'Штормтрап', 'Категория:Музеи канализации', 'Материалы для бластинга', 'Измельчение зёрен кофе', 'Кухонный комбайн', 'Шпатель', 'Турфанская водная система', 'Потолок', 'Стикер (графическое изображение)', 'Категория:Стенопись', 'Стол для заседаний', 'Золотой рубин', 'Выпрямитель (в парикмахерском деле)', 'Дуговая лампа', 'Стеклотканевые обои', 'Французский балкон', 'Консоль (архитектура)', 'Печи для пиццы', 'Суглинок', 'Облицовочный камень', 'Категория:Акустические системы', 'Вица (деревообработка)', 'Категория:Очистные сооружения', 'Атлант (архитектура)', 'Кремнистый туф', 'Двухъярусная кровать', 'Строительно-монтажный пистолет', 'Харьков (электробритва)', 'Категория:Виды мебели по сложности', 'Двойной трон', 'Антиквариат', 'Стеклопластик', 'Категория:Корпусная мебель', 'Противоптичьи шипы', 'Абиссинский колодец', 'Крепёжные изделия', 'Прессованное стекло', 'Категория:Водозаборы', 'Пластиковое загрязнение', 'Нож для снопов', 'Категория:Асбест', 'Большая Клоака', 'Перекрытие', 'Городские ворота', 'Огнеупорный лом', 'Наиск', 'Радиола (бытовая электроника)', 'Всеизраильский водопровод', 'Голландская печь', 'Электронная лампа', 'Международная федерация по железобетону', 'Категория:Хрусталь', 'Бочка (архитектура)', 'Машикули', 'Крепостная стена', 'Каскад (Ереван)', 'Категория:Берлинская стена', 'Энергосберегающая лампа', 'Оружейня', 'Кубоватое покрытие', 'Стена Цоя в Минске', 'Ледник (помещение)', 'Сень (архитектура)', 'Металлопластик', 'Силиконовые герметики', 'Венецианское окно', 'Геосетка', 'Павлиний трон', 'Сухая кладка', 'Бактерицидная лампа', 'Снегозадержатель', 'Задний двор', 'Стабилитрон коронного разряда', 'Ергенек', 'Солевая грелка', 'Юго-западная стена (Выборгский замок)', 'Литой асфальтобетон', 'Спа (физиотерапия)', 'Балюстрада', 'Баниг', 'Головное устройство', 'Кресло с подголовником', 'Гоми ода', 'Запорная арматура', 'Категория:Проектирование программного обеспечения', 'Топка каминная', 'Категория:Производители комбайнов по странам', 'Пилка для электролобзиков', 'Каменная кладка', 'Клеймо (инструмент)', 'Волюта', 'Консервный нож', 'Нокбокс', 'Транссахарский газопровод', 'Шампур', 'Категория:Сваи', 'Категория:Водоподготовка', 'Лофт', 'Балканский поток', 'Фаолитирование', 'Тепловой насос', 'Mint (бытовой робот)', 'Сервировочный стол', 'Арборлоо', 'Люнет (архитектура)', 'Категория:Огнеупоры', 'Воздухоочиститель', 'Амбарная Звезда', 'Домашняя печь', 'Меконий', 'Проектирование', 'Забор', 'Камень', 'Категория:Телевизионные приёмники', 'Портал (архитектура)', 'Категория:Автомобильные двери', 'Боло (нож)', 'Бра (светильник)', 'Фиктивная автобусная остановка', 'High End', 'Категория:Графический дизайн', 'Выбор материала', 'Категория:Водоснабжение Крыма', 'Категория:Сотовые телефоны', 'Категория:Крепь', 'Газосветные лампы', 'Генуфлекторий', 'Категория:Громкоговорители', 'Панельная пила', 'Хоннонбо', 'Пенообразователь', 'Ланцетовидное окно', 'Гидравлический затвор', 'Коробка-кровать', 'Резит', 'Кварцевый песчаник', 'Категория:Скульптуры из цемента', 'Садовый секач', 'Детская горка', 'Гидравлический молот', 'Абасон', 'Операционный блок', 'Раковинный известняк', 'Рубка (деталь корабля)', 'Категория:Льноуборочные комбайны', 'Обсидиан', 'Декинг', 'Категория:Бесцементный бетон', 'Ворота', 'Молибденовое стекло', 'База (архитектура)', 'Ковёр', 'Кайло', 'Паровой котёл', 'Полубутовая техника строительства', 'Категория:Виды мебели по прочим признакам', 'Гопурам', 'Отмостка', 'Замковый камень', 'Платный туалет', 'Компактная люминесцентная лампа', 'Паросский мрамор', 'Категория:Троны России', 'Водоканал (Нижний Новгород)', 'Ледовый молоток', 'Солнцезащитные плёнки', 'Кусачки', 'Ограничитель перенапряжения', 'Цифровая скульптура', 'Отопительный прибор', 'Планетарный миксер', 'Западноафриканский газопровод', 'Носилки', 'Категория:Каменные здания и сооружения', 'Телеханы (стеклозавод)', 'Лабиринт Реймсского собора', 'Гидротехнический бетон', 'Тепловычислитель', 'Пуровер', 'Труба (изделие)', 'Сушилка для рук', 'Ремонт зданий и сооружений', 'Стул', 'Экструзионный пенополистирол', 'AV-ресивер', 'Сервис-дизайн', 'Футон', 'Водоканал Ростова-на-Дону', 'Магнит на холодильник', 'Пентхаус', 'Пластмассы', 'Стеклянный электрод', 'Баскур', 'Целлофан', 'Битумная черепица', 'Сетка Рабица', 'Газовая плита', 'Юзабилити', 'Ачи и Сипак: Убойный дуэт', 'Плавающий шар (фонтан)', 'Релайнинг', 'Датчик движения', 'Туалетный ёршик', 'Бесик (колыбель)', 'Категория:Виды мебели по эксплуатационному назначению', 'Огнеупорщик', 'Категория:Кухонные плиты', 'Бур', 'Разводной ключ', 'Цокольный этаж', 'Стеклянная гармоника', 'Тротуар', 'Печь Франклина', 'Балахана', 'Ванна', 'Техника строительства египетских пирамид', 'Посейдон (газопровод)', 'Боллфлауэр', 'Пористое стекло', 'Игровое кресло', 'Нож', 'Текстильные обои', 'Кувалда', 'Берсо', 'Динамик ПК', 'Розетка (декор)', 'Категория:Месторождения мрамора', 'Зал боевой славы', 'Ротонда', 'Ферма (конструкция)', 'Детское автокресло', 'Фибролит', 'Малярный валик', 'Озонатор', 'Категория:Великая Китайская стена', 'Газовый конвектор', 'Категория:Месторождения глин', 'Ярославская перемычка', 'Кухонная плита', 'Келасурская стена', 'Балкон', 'Буккер', 'Категория:Цемент', 'Троны России', 'Дровяной водонагреватель', 'Септик', 'Музыкальная пила', 'Система предупреждения о близости земли', 'Трифора', 'Компостный туалет', 'Алмазное бурение', 'Polaris PVCR 0726W', 'Аритмия (искусство)', 'Водонапорная башня (Мытищи)', 'Бетонная броня', 'Подвал Самарры', 'Щипец', 'Электробритва', 'Фитинг', 'Паркетная доска', 'Фильтр для воды', 'Ульмская школа дизайна', 'Термометр Галилея', 'Анкерные сваи', 'Малахитовая гостиная Зимнего дворца', 'Категория:Церковные помещения', 'Инверторный кондиционер', 'Каптаж', 'Пляжная корзина', 'Прилавок', 'Летучая зола', 'Доска пола', 'Книжный шкаф', 'Пульт дистанционного управления', 'Каркас (конструкция)', 'Космический туалет', 'Валунный суглинок', 'Канапе (мебель)', 'Ручной фонарь', 'Дзуарикау — Цхинвал', 'Тахта', 'Выкраска', 'Стоа', 'Тяга (архитектура)', 'Аванбек', 'Жукаяк', 'Шлакоситаллы', 'Столешница', 'Тактический фонарь', 'Категория:Столы', 'Чулан', 'Механическое пианино', 'Лещадность', 'Недвижимая лестница', 'Пурал', 'Соломенная крыша', 'Барабан (архитектура)', 'Рустика', 'Хартфордский шпиль', 'Краеугольный камень', 'Пароварка', 'Винипласт', 'Категория:Туфы', 'Всемирный день туалета', 'Бифорий', 'Калоприёмник', 'Пароизоляция', 'Керосинка', 'Бетоносмеситель', 'Газоразрядная лампа', 'Открытое проектирование', 'Виндзейль', 'Книжное колесо', 'Категория:Веранды', 'Категория:Знаменитые предметы мебели', 'ILife V7s Pro', 'Аэрация', 'Шкаф для одежды', 'Категория:Крепёжные изделия', 'Турбодефлектор', 'Категория:Камень', 'Богемское стекло', 'Категория:Электрофоны', 'Категория:Незавершённые статьи о стекле', 'Категория:Античная мебель', 'Пароконвектомат', 'Стеклорез', 'Ливийское стекло', 'Охотничья звезда', 'Категория:Строительство в зимний период', 'Расширительный бак', 'Радиомачта', 'Категория:Скульптуры из известняка', 'Секатор', 'Кал', 'Цековка', 'Хирургическая пила', 'Буазери', 'Евроремонт', 'Трубопровод', 'Мономахов трон', 'Серная лампа', 'Садовник', 'Водоотводная трубка', 'Кресло', 'Гравелит', 'Категория:Отдельно стоящие камни', 'Рубиновое стекло', 'Бровка (архитектура)', 'Структура жидкостей и стёкол', 'Лондонский молоток', 'Шлицовка', 'Смерть от вентилятора', 'Модульон', 'Категория:Крыша', 'Цемент Сореля', 'Категория:Неотапливаемые помещения', 'Категория:Японская ширма', 'Задвижка', 'Специализированные газообразователи', 'Битумный раствор', 'Кофемашина', 'Мастерская', 'Газопровод Казахстан — Китай', 'Паттерн', 'Лигнин', 'Категория:Машины и оборудование для свайных работ', 'Категория:Обои', 'Смарт-холодильник', 'Категория:Лопаты', 'Лёгкие бетоны', 'Школа Камондо', 'Перемещение зданий и сооружений', 'Комбайнер', 'Пьяная бочка', 'Таймер', 'Шваберная', 'Поребрик (архитектура)', 'Несимметрия токов и напряжений', 'Плоская крыша', 'Алтарная преграда', 'Катапультируемое кресло', 'Категория:Музеи и выставки мебели', 'Косилка-плющилка', 'Подъезд', 'Малка (инструмент)', 'Киматий', 'Стеклопластиковые трубы', 'Металлопласт', 'Акведук', 'Ламинированное напольное покрытие', 'Категория:Душ', 'Категория:Интерьеры', 'Доливной чайник', 'Палка-копалка', 'Свинцовый кирпич', 'Еврейский камень', 'Гипс (материал)', 'Температура стеклования', 'Плавательный бассейн', 'Малые архитектурные формы', 'Категория:Паркет', 'Эшфордский чёрный мрамор', 'Категория:Катапультные кресла', 'Умные сети электроснабжения', 'Русская печь', 'Тюбинг', 'Опускной колодец', 'Категория:Использование песка', 'Стрельчатая арка', 'Категория:Художественная резьба по камню', 'Общественный книжный шкаф', 'Сампьетрино', 'Водогрейный котёл', 'Дарвинское стекло', 'Водонагреватель', 'Французское окно', 'К-36РБ', 'Апофика', 'Категория:Ворота по странам', 'Блендер', 'Граувакка', 'Категория:Механика грунтов', 'Четверик (архитектура)', 'Гипсоволокнистый лист', 'Трубочист', 'Категория:Пайка', 'Ширинка (архитектура)', 'Перила', 'Умное стекло', 'Кокошник (архитектура)', 'Погреб', 'Аркбутан', 'Неф', 'Машрабия', 'Фиброцемент', 'Зеркало Гезелла', 'Категория:Роботы-пылесосы США', 'Композитные гибкие связи', 'Полати', 'Слани (настил)', 'Олимпийский водноспортивный комплекс', 'Категория:Типы помещений', 'Масляная лампа', 'Стайня', 'Сшитый полиэтилен', 'Биокирпич', 'Категория:Светофоры', 'Оверлок', 'Категория:Составные части мебели', 'Черта (инструмент)', 'Архитектурный бетон', 'Слуховое окно', 'Церковь на чердаке', 'Оборудование для порошковой окраски', 'Садовая железная дорога', 'Шведка (печь)', 'Ряж', 'Категория:Теплоизоляционные материалы', 'Категория:Туфовые отложения', 'Водоразборная колонка', 'Гексод', 'Зимний сад', 'Пермский центр развития дизайна', 'ONE-NET', 'Триглиф', 'Тиховарка', 'Моллирование', 'Магнезит', 'Идентичность бренда', 'Акцидентный набор', 'Фальц', 'Спортивный зал', 'Колёсоотбойная тумба', 'Анфилада', 'Ultra HD Blu-ray', 'Оджаг', 'Сельскохозяйственный комбайн', 'Лестница', 'Керамический кирпич', 'Погружной блендер', 'Трон Святого Августина', 'Квартира', 'Грот (архитектура)', 'Креденца', 'Дворец водных видов спорта (Брест)', 'Категория:Кирпичные заводы', 'Хавели', 'Категория:Ретро', 'Сумка-термос', 'Арболит', 'Forward Versatile Disc', 'Комитет по ликвидации платных туалетов в Америке', 'Датчик протечки', 'Дюрхан', 'Софит (архитектура)', 'Дверные доборы', 'Вентильная головка', 'Категория:Взрывы канализации', 'Наличник', 'Карниз', 'Мафраш', 'Категория:Кресла', 'Пойгумбаз', 'Категория:Блендеры', 'Тяжёлые бетоны', 'Шёлковый путь (газопровод)', 'Архитрав', 'Асфальтобетонный завод', 'Война токов', 'Бурцевское месторождение', 'Категория:Триумфальные арки', 'Категория:Изделия из асбеста', 'Отпариватель', 'Электроодеяло', 'Голубец (архитектура)', 'Категория:Фибробетон', 'Проекционный телевизор', 'Строительные инструменты', 'Вермикулитобетон', 'Рулонные ворота', 'Электрический чайник', 'Натриевая газоразрядная лампа', 'Гэнкан', 'Стеклобетон', 'Кангер', 'Картибул', 'Маскарон', 'Тёплый пол', 'Прикроватная тумбочка', 'Трубогиб', 'Воздуховод', 'Дымовой люк', 'Категория:Бытовые роботы', 'Канализационный газ', 'Шишкодробилка', 'Озеленение крыш'])
        
        # Список категорий из Википедии на которые нужно разложить статьи, но уже пронумерованный по уровням (чем больше значение, тем выше уровень, тем более специфичную тему охватывает категория и тем больший приоритет она получает при выборе между несколькими категориями разных уровней)
        self.leveled_cats = {'Категория:Косилки': 1, 'Категория:Архитектурные элементы': 1, 'Категория:Дизайн': 1, 'Категория:Ремонт': 1, 'Категория:Строительные материалы': 1, 'Категория:Малые архитектурные формы': 1, 'Категория:Основания и фундаменты': 1, 'Категория:Водоснабжение': 1, 'Категория:Сельскохозяйственные инструменты': 1, 'Категория:Осветительные приборы': 1, 'Категория:Теплоснабжение': 1, 'Категория:Бытовая техника': 1, 'Категория:Строительные элементы и конструкции': 1, 'Категория:Трубопроводы': 1, 'Категория:Постельные принадлежности': 1, 'Категория:Вентиляция': 1, 'Категория:Категория:Хозяйственные строения': 1, 'Категория:Энергоснабжение': 1, 'Категория:Плавательные бассейны': 1, 'Категория:Канализация': 1, 'Категория:Технология строительных процессов': 1, 'Категория:Строительные технологии': 1, 'Категория:Строительные инструменты': 1, 'Категория:Комбайны': 1, 'Категория:Слесарные инструменты': 1, 'Категория:Сантехника': 1, 'Категория:Отопление': 1, 'Категория:Облицовочные материалы': 2, 'Категория:Интерьер': 2, 'Категория:Ограждения': 2, 'Категория:Гидроизоляционные материалы': 2, 'Категория:Огнеупоры': 2, 'Категория:Садовые инструменты': 2, 'Категория:Ландшафтный дизайн': 2, 'Категория:Детская площадка': 2, 'Категория:Цемент': 4, 'Категория:Асбест': 3, 'Категория:Газобетон': 2, 'Категория:Кирпичи': 2, 'Категория:Водонагреватели': 3, 'Категория:Битумы': 2, 'Категория:Кухонная техника': 2, 'Категория:Ворота': 3, 'Категория:Лампы': 2, 'Категория:Интеллектуальная бытовая техника': 2, 'Категория:Туалет': 2, 'Категория:Строительные плиты': 2, 'Категория:Дымовые трубы': 2, 'Категория:Природный камень': 2, 'Категория:Глины': 2, 'Категория:Дорожные покрытия': 2, 'Категория:Железобетон': 4, 'Категория:Фонари': 2, 'Категория:Швейные машины': 2, 'Категория:Котельные': 2, 'Категория:Фасады': 2, 'Категория:Бетон': 3, 'Категория:Унитазы': 3, 'Категория:Дверь': 2, 'Категория:Камень': 2, 'Категория:Стены': 2, 'Категория:Вентиляционное оборудование': 2, 'Категория:Бытовые роботы': 4, 'Категория:Бытовая электроника': 2, 'Категория:Сваи': 2, 'Категория:Песок': 2, 'Категория:Кровельные материалы': 3, 'Категория:Крыша': 2, 'Категория:Светильники': 2, 'Категория:Пилы': 2, 'Категория:Отопительная техника': 2, 'Категория:Полы': 4, 'Категория:Молоты': 2, 'Категория:Душ': 2, 'Категория:Железобетонные конструкции': 5, 'Категория:Стеклорезы': 3, 'Категория:Строительная кладка': 2, 'Категория:Древесные материалы': 2, 'Категория:Газопроводы': 2, 'Категория:Лестницы': 2, 'Категория:Пылесосы': 2, 'Категория:Пластмассы': 2, 'Категория:Горячее водоснабжение': 2, 'Категория:Стекло': 2, 'Категория:Мебель': 3, 'Категория:Помещения': 3, 'Категория:Чердаки': 5, 'Категория:Садовые украшения': 3, 'Категория:Асфальт': 3, 'Категория:Звуковоспроизводящая аппаратура': 3, 'Категория:Блендеры': 3, 'Категория:Машины для бетонных работ': 4, 'Категория:Чайники': 4, 'Категория:Печи': 3, 'Категория:Кофейное оборудование': 3, 'Категория:Асфальтобетон': 4, 'Категория:Вентиляторы': 3, 'Категория:Древесные плиты': 3, 'Категория:Роботы-пылесосы': 5, 'Категория:Туфы': 3, 'Категория:Мозаичные полы': 5, 'Категория:Паркет': 6, 'Категория:Декоративное оформление стен': 4, 'Категория:Гранит': 3, 'Категория:Гидромассаж': 3, 'Категория:Телевизионные приёмники': 3, 'Категория:Электронные лампы': 3, 'Категория:Бесцементный бетон': 4, 'Категория:Известняк': 3, 'Категория:Декоративное оформление интерьера': 3, 'Категория:Напольные покрытия': 5, 'Категория:Кухонные плиты': 4, 'Категория:Отопительные приборы': 3, 'Категория:Умный дом': 3, 'Категория:Мрамор': 3, 'Категория:Качели': 3, 'Категория:Облицовка природным камнем': 5, 'Категория:Апартаменты': 4, 'Категория:Виды мебели': 4, 'Категория:Обои': 5, 'Категория:Мебельные изделия': 4, 'Категория:Типы помещений': 4, 'Категория:Декоративное оформление оконных проёмов': 4, 'Категория:Грелки': 4, 'Категория:Залы': 4, 'Категория:Электроотопительные приборы': 4, 'Категория:Помещения в жилище': 4, 'Категория:Квартиры': 4, 'Категория:Неотапливаемые помещения': 4, 'Категория:Виды мебели по конструктивным признакам': 5, 'Категория:Типы помещений на кораблях': 5, 'Категория:Мебель для хранения': 5, 'Категория:Мебельные подставки': 5, 'Категория:Виды мебели по эксплуатационному назначению': 5, 'Категория:Виды мебели по сложности': 5, 'Категория:Подвалы': 5, 'Категория:Мебель для сидения (лежания)': 5, 'Категория:Виды мебели по прочим признакам': 5, 'Категория:Веранды': 5, 'Категория:Столы': 5, 'Категория:Виды мебели по материалам изготовления': 5, 'Категория:Тумбы': 6, 'Категория:Кресла': 7, 'Категория:Шкафы': 6, 'Категория:Стулья': 6, 'Категория:Диваны': 7, 'Категория:Кровати': 6, 'Категория:Корпусная мебель': 6, 'Категория:Сундуки': 6, 'Категория:Мягкая мебель': 6, 'Категория:Троны': 6, 'Категория:Мебель для предприятий торговли': 6, 'Категория:Мебельные гарнитуры': 6, 'Категория:Христианские кафедры': 7, 'Категория:Книжные шкафы': 7, 'Категория:Катапультные кресла': 7, 'Категория:Троны России': 7}
        
        # Собственные категории, которых нет в Википедии но на которые нужно разложить слова, при полном совпадении с названием категории отсюда слово определяется как принадлежащее этой категории
        self.all_categories = ['Строительство заборов', 'Озеленение участка', 'Болезни и вредители', 'Вдохновение', 'Почва и плодородие', 'Баня', 'Удобрения и стимуляторы', 'Подпорные стенки', 'Клубника', 'Яблоня', 'Малина', 'Смородина', 'Виноград', 'Слива', 'Жимолость', 'Вишня, черешня', 'Огурцы', 'Томаты', 'Картофель', 'Перец', 'Капуста', 'Кабачки', 'Грибы', 'Розы', 'Морковь', 'Тюльпаны, Нарциссы', 'Другие луковичные', 'Пионы', 'Хризантемы', 'Георгины', 'Водные растения', 'Деревья и кустарники', 'Летники', 'Прочие многолетники', 'Орхидеи', 'Хосты', 'Цветники и клумбы', 'Газон', 'Альпийские горки', 'Малые архитектурные формы', ' Перголы', 'Компост и перегной', 'Своими руками', 'Ворота ', 'Разные цветы', 'Гаражи и навесы', 'Сарай', ' Туалет ', 'Арбузы', 'Пчеловодство', 'Редька', 'Дыня', 'Клюква', 'Брусника', 'Облепиха', 'Можжевельник', 'Гортензии', 'Бобовые', 'Кукуруза', 'Рыболовство', 'Комнатные растения', 'Погреб', 'Цитрусовые', 'Груша', 'Астры', 'Крыжовник', 'Алыча', 'Абрикос', 'Ежевика', 'Калина', 'Земляника', 'Тыква', 'Голубика', 'Лук', 'Чеснок', 'Табак', 'Гейхеры', 'Баклажаны', 'Репа', 'Свекла', 'Редис', 'Бегония', 'Дровяник', 'Укроп', 'Пруды', 'Фонтаны', 'Барбекю', 'Мангал', 'Коптильня', 'Тандыр', 'Гриль', 'Бытовки', 'Летний душ', 'Колодцы', 'Беседки', 'Выгребные ямы', 'Калитки', 'Новый год', 'Мебель для кухни', 'Мебельная фурнитура', 'Спальня', 'Шкафы-купе', 'Пихта', 'Мебель для гостиной', 'Детская мебель', 'Канализация', 'Септики', 'Дренаж', 'Водопровод', 'Скважина', 'Кирпич', 'Сайдинг ', 'Строительные блоки', 'Пазогребневые плиты ', 'ДСП и ЛДСП', 'Оргалит (ДВП)', 'Фанера', 'Цемент', 'Штукатурка', 'Шпаклевка', 'Клей для плитки', 'Гипсокартон', 'ГВЛ-листы', 'Винтовые сваи', 'Арматура', 'Уголок стальной', 'Трубы из металла', 'Швеллер', 'Двутавр', 'Лист стальной', 'Проволока', 'Бревно', 'Доска', 'Вагонка', 'Брус', 'Телевизоры', 'Холодильники', 'Стиральные машины', 'Духовки и плиты', 'Посудомоечные машины', 'Техника для кухни', 'Пылесосы', 'Утюги и парогенераторы', 'Вытяжки', 'Техника для волос', 'Увлажнители и ионизаторы воздуха', 'Кондиционеры', 'Бойлеры', 'Вентиляторы', 'Обогреватели', 'Камины', 'Колонки и наушники', 'Кресла-качалки, гамаки', 'Печи', 'Скандинавский стиль', 'Лофт', 'Хай-тек', 'Классический стиль', 'Прованс', 'Кантри', 'Модерн', 'Сплит-системы', 'Вентиляция', 'Электропроводка', 'Розетки и выключатели', 'Уличное освещение', 'Внутреннее освещение', 'Электрощитки', 'Счетчики и приборы учета', 'Сетевые фильтры и удлинители', 'Светодиоды', 'Фито-лампы для растений', 'Геодезия', 'Кадастровый учет', 'Межевание', 'Технический план', 'Проекты домов', 'Утепление дома', 'Фасад дома', 'Крыша и кровля', 'Лестницы', 'Фундамент дома', 'Ванная комната', 'Кухня', 'Балконы и лоджии', 'Окна и двери', 'Полы', 'Ремонт в квартире', 'Новости', 'Стены и потолок', 'Садовая техника', 'Технологии', 'Тренды', 'Садовый инструмент и инвентарь', 'Рассада', ' Бассейны', 'Рецепты', 'Садовые дорожки, бордюры', 'Живые изгороди', 'Полезно', 'Налоги, регистрация, сделки', 'Литология', 'Топография', 'Геология', 'Разное оборудование', 'Экологические проблемы', 'Разобрать', 'Мусор и отходы', 'Утилизация отходов', 'Вопросы ЖКХ', 'Трубы и работа с ними', 'Умный дом', 'Газификация', 'Я познаю мир', 'Природа', 'Животные', 'География', 'Астрономия', 'Семена', 'Веранды и террасы', 'Детские площадки', 'Злаки и крупы', 'Орехи', 'Дымоходы', 'Отмостка', 'Квартирный вопрос', 'Шторы', 'Теплоизоляция', 'Гидроизоляция', 'Мойка', 'Раковина']
        
        
        # Дальше идут неконфигурируемые переменные, их изменять не надо
        
        self.morph = pymorphy2.MorphAnalyzer() 
        self.wn = RuWordNet(filename_or_session='ruwordnet.db')
        self.cash = cash.cash
        self.model = gensim.models.KeyedVectors.load("geowac/model.model")
        
        self.punctuation = punctuation + ' \n\t«»—'\
            
        wikipedia.set_lang('ru')
        self.wiki_wiki = wikipediaapi.Wikipedia('ru')
        self.site = Site('ru.wikipedia.org')
        
        self.session = requests.Session()
        self.session.mount("http://", requests.adapters.HTTPAdapter(max_retries = 2))
        self.session.mount("https://", requests.adapters.HTTPAdapter(max_retries = 2))
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36'}
        self.session.headers.update(headers)

        self.all_categories = [word.lower() for word in self.all_categories]
        self.all_cats_keys, self.all_lex_values = self.get_cache(self.all_categories)

        self.for_cnt = []
        
        for elem in self.all_cats_keys.values() :
            self.for_cnt.extend(elem)
        self.cat_dubles = Counter(self.for_cnt)
        
        
    def get_analysis(self, text: Union[str, list], n_gramm: int = 2, remove_minor: bool = True) -> list :
        
        """get_analysis(self, text, n_gramm=2, remove_minor=True) 
        
        Морфологический анализ с использованием MyStem
        
        Аргументы :
        text - str или int; текст, который необходимо обработать
        n_gram - int, длина последовательности слов, по умолчанию равна 2
        remove_minor - bool, определяет, нужно ли вырезать служебные части речи из предложения, по умолчанию установлено значение True
        
        Возвращает list с морфологическими разборами слов, распределенные на группы размером n_gramm
        """   
        
        m = Mystem()
        
        if type(text) == list :
            text = ' '.join(text) # Переводим список в строку при необходимости
            
        stemmer_analyze = m.analyze(text) # Анализируем при помощи MyStem
        full_analyze_tmp = []
        
        for word in stemmer_analyze : # Переводим анализ в другой формат
            
            if word['text'].strip() != '' :

                tmp_dict = {} 
                
                try :
                    
                    analyzed_word = word['analysis'][0]
                    
                except : 
                    
                    continue
                
                tmp_dict['original'] = word['text'] # Оставляем оригинал
                tmp_dict['infinitive'] = analyzed_word['lex'] # Берём инфинитив слова 

                grammar = analyzed_word['gr']
                separator_PROP = grammar.split('=')
                separator_POS = separator_PROP[0].split(',')

                tmp_dict['part of speech'] = separator_POS[0] # Берём часть речи

                tmp_dict['case'] = ''
                tmp_dict['gender'] = ''

                if tmp_dict['part of speech'] == 'S' : # Если часть речи - существительное, то ещё берём падеж и род
                    
                    tmp_dict['case'] = separator_PROP[1].replace('(', '').replace('|', ',').split(',')[0]
                    tmp_dict['gender'] = separator_POS[1]
                
                if not(remove_minor == True and tmp_dict['part of speech'] in ['CONJ', 'INTJ', 'PR']) : # Если часть речи служебная и remove_minor == True, то не добавляем в общий список
                    
                    full_analyze_tmp.append(tmp_dict)
            
        full_analyze = [full_analyze_tmp[i:i+n_gramm] for i in range(0, len(full_analyze_tmp))] # Объединяем проанализированные элементы в списки по размерам n_gramm
        
        return full_analyze
    
    
    
    def get_bigramms(self, text: str, header:bool = False, repeat:bool = True, only_bigramms:bool = False) -> list :

        """
        get_bigramms(self, text: str, header:bool = False, repeat:bool = True, only_bigramms:bool = False) -> list 
        
        Функция, которая возвращает проанализированные биграммы, которые имеют смысловую нагрузку:
        1) Существительное + существительное
        2) Глагол + существительное
        3) Прилагательное + существительное
        А так же одиночные слова
        
        Аргументы
        text - str; текст для анализа
        header - bool; True если текст является заголовком. Заголовок это обычно короткий текст, у каждого слова в котором есть смысловая нагрузка, поэтому в некоторых биграммах отбираются даже одиночные слова. По умолчанию False
        repeat - bool; False если надо убрать дубли. По умолчанию True
        only_bigramms - bool; True  если нужно удалить одиночные слова и оставить только биграммы. По умолчанию False
        """
        
        
        text = text.lower().replace('-', ' ').translate(str.maketrans('', '', punctuation + '1234567890')).split() # Убираем из текста всё лишнее
        
        edited_list = []
        response = self.get_analysis(text) 
  
        for bigramm in response :

            if len(bigramm) == 2 :

                word_1 = bigramm[0]
                word_2 = bigramm[1]

                if len(word_1['infinitive']) > 2 and len(word_2['infinitive']) > 2 : # Проверяем не является ли какое-то из слов слишком коротким
                    
                    if word_1['part of speech'] in ['S', 'V', 'A'] and word_2['part of speech'] in ['S', 'V', 'A'] : # Проверяем принадлежат ли оба слова важным частям речи (существительное, глагол, прилагательное)
                        
                        if word_1['part of speech'] == 'S' and word_2['part of speech'] == 'S' : # Два существительных
                            
                            edited_list.extend([word_1['infinitive'], word_2['infinitive']])
                            
                            word_1 = word_1['infinitive']
                            word_2 = word_2['infinitive']
                            
                            
                        else :

                            if word_1['part of speech'] == 'S' and word_2['part of speech'] == 'A' : # Существительное и прилагательное
                            
                                word_1, word_2 = word_2, word_1
                            
                            if word_1['part of speech'] == 'A' and word_2['part of speech'] == 'S' :

                                if header == True :

                                    edited_list.append(word_2['infinitive']) # Если заголовок то добавляем и существительное отдельно

                                try :

                                    needed_gender = self.gender_replacement[word_2['gender']]


                                except : 

                                    needed_gender = self.morph.parse(word_2['original'])[0].tag.gender

                                try :

                                    word_1 = self.morph.parse(word_1['infinitive'])[0].normalized.inflect({needed_gender}).word

                                except :

                                    word_1 = word_1['infinitive']

                                word_2 = word_2['infinitive']

                            elif (word_1['part of speech'] == 'S' and word_2['part of speech'] == 'V') or (word_1['part of speech'] == 'V' and word_2['part of speech'] == 'S') : # Существительное и глагол
                                
                                if word_1['part of speech'] == 'V' :

                                    edited_list.append(word_2['infinitive'])                            


                                    word_1 = word_1['infinitive']
                                    word_2 = word_2['original']

                                else :

                                    edited_list.append(word_1['infinitive']) 

                                    word_2 = word_2['infinitive']
                                    word_1 = word_1['original']

                            else : 
                                
                                continue 
                    
                        edited_list.append(f"{word_1} {word_2}")

                    else :

                        if word_1['part of speech'] == 'S' and len(word_1['infinitive']) > 2 : # Одиночное существительное
                            
                            edited_list.append(f"{word_1['infinitive']}")

                        elif word_2['part of speech'] == 'S' and len(word_2['infinitive']) > 2 :

                            edited_list.append(f"{word_2['infinitive']}")

                else :

                    if word_1['part of speech'] == 'S' and len(word_1['infinitive']) > 2 : # Одиночное существительное
                        
                        edited_list.append(f"{word_1['infinitive']}")

                    elif word_2['part of speech'] == 'S' and len(word_2['infinitive']) > 2 :

                        edited_list.append(f"{word_2['infinitive']}")


        if only_bigramms == True : # Удаляем одиночные слова если необходимо

            for elem in edited_list.copy() :

                if len(elem.split(' ')) != 2 :

                    edited_list.remove(elem)

        if repeat == False : # Удаляем дубли если необходимо

            edited_list = list(set(edited_list))
        
        return edited_list
    
    
    
    
    def get_info_of(self, word: str) -> dict : 
        
        """get_info_of(self, word: str) -> dict
        
        Получить однокоренные слова и корень слова при помощи википедии и RuWordNet
        
        Аргументы:
        word: str - слово для анализа
        
        Возвращает dict с корнем слова и однокоренными словами
        """

        word = word.lower()
        query = 'https://ru.wiktionary.org/w/index.php?title=' + urlenc.quote(word)
        request = self.session.get(query).content
        soup = BeautifulSoup(request, features="html.parser")
        root = ''
        td = []
        
        try :
            
            morphems_div = soup.body.select_one('div#mw-content-text').find_all('p')
            for p in morphems_div :
                if 'корень' in p.text.lower() :
                    morphems = p.text.lower()
                    break
            pre_root = morphems[morphems.find('корень') + len('корень') + 1:].strip()

            root = pre_root[0: pre_root.find(' ')].replace(';', '').translate(str.maketrans('', '', punctuation))
            table = soup.find('table', {'class': 'wikitable'})
            if table.find('td').text.strip() == 'Ближайшее родство' :
                td = []
                for li in table.find_all('li') :
                    words = li.text[li.text.find(':') + 1:].strip().replace(';', ',').split(', ')

                    td.extend(words)
            
            else :
                td = []
                
        except :
            pass
        
        word_set = [word] 
        for sence in self.wn.get_senses(word) :
            for wrd in sence.derivations :
                word_set.append(wrd.name.lower())

        word_set.extend(td)
        word_set = set(word_set)

        return {'root': root, 'related_words': word_set}
    
    
    
    def disambig_word(self, word: str) -> Union[bool, str] :
        
        """
        disambig_word(self, word: str) -> Union[bool, str] 
        
        Выясняет является ли слово однозначным. Если да, то возвращает то, как оно записано на Википедии
        
        Аргументы :
        
        word - str; слово для анализа
        
        Возвращает False если слово не однозначное и str если однозначное  
        """
        
        try :

            params = {
                'action': 'query',
                'prop': 'pageprops',
                'ppprop': 'disambiguation',
                'titles': word,
                'format': 'json',
                'redirects': 1,
                }
            
            response = self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()    
            
            id = list(response['query']['pages'].keys())[0]
            
            if 'pageprops' in response['query']['pages'][id] :
                
                return word[0].upper() + word[1:]
            
            params = {
                'action': 'parse',
                'prop': 'text',
                'pageid': id,
                'format': 'json',
                'redirects': 1,
                'section': 0

            } 
            
            soup = BeautifulSoup(self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()['parse']['text']['*'], features="lxml")
            
            dis = soup.select('a.mw-disambig')[0]['title']
            
            if word.lower() in dis.lower() : return dis 
            
            else : 
                
                return False
            
        except IndexError :
            
            return False
        
        except KeyError :
            
            return False
    
    
    def most_popular_bigramms(self, bigramms: list, num_of_bigramms: int = 5) -> dict:
        
        """most_popular_bigramms(self, bigramms: list, num_of_bigramms: int = 5) -> dict
        
        Возвращает самые популрные биграммы(и одиночные слова) из bigramms в количестве num_of_bigramms
        
        Аргументы:
        
        bigramms - list; список биграмм(и одиночных слов) для анализа
        num_of_bigramms - int; количество биграмм(и одиночных слов) которых надо вернуть
        
        Возвращает словарь длинной num_of_bigramms в формате биграмма: количество
        """

        rslt = Counter(bigramms).most_common(num_of_bigramms)

        result = {}

        for big in rslt :

            result[big[0]] = big[1]

        return result


    def is_abbr(self, word: str) -> str :
        
        """
        is_abbr(self, word: str) -> str
        
        Проверяет на Википедии является ли слово аббревиатурой. Если да, то возвращает расшифровку из Википедии
        
        Аргументы:
        word - str; слово для анализа
        
        Возвращает str, либо само слово, либо его расшифровку
        """

        cons = 'йцкнгшщзхфвпрлджчсмтб'
        vow = 'уеыаоэяиюё'

        if len(word) == 3 :
            if not(word[0] in cons and word[1] in vow and word[2] in cons) :
                wikisearch = wikipedia.search(word)[0]
                if wikisearch != word :
                    return wikisearch.lower()
        
        return word
    
    
    def is_cognate(self, word1: str, word2: str, cash: dict = None) -> bool:
        
        """
        is_cognate(self, word1: str, word2: str, cash: bool = None) -> bool
        
        Прверяет являются ли word1 и word2 родственными при помощи Википедии и RuWordNet
        
        word1 - str; первое слово для проверки
        word2 - str; второе слово для проверки
        cash - dict; словарь используемый для поиска родственных слов, по умолчанию None и выбирается дамп словаря Википедии
        
        Возвращает bool
        """
        
        diff = True
        
        if not cash :
            
            cash = self.cash
            
        for word in difflib.SequenceMatcher(None, word1, word2).get_matching_blocks() :
            
            if word.size > 1 :
                
                diff = False
                break
            
        if diff == False :        

            if cash :
                
                try :
                    
                    word1_wiki = cash[word1]   
                    
                except :
                    
                    word1_wiki = self.get_info_of(word1)

                try :
                    
                    word2_wiki = cash[word2]   
                    
                except :
                    
                    word2_wiki = self.get_info_of(word2)

            else :
                
                word1_wiki = self.get_info_of(word1)
                word2_wiki = self.get_info_of(word2)


            if word1_wiki['root'] == '' and word2_wiki['root'] != '' and word2_wiki['root'] in word1 :
                
                return True
            
            elif word2_wiki['root'] == '' and word1_wiki['root'] != '' and word1_wiki['root']in word2 :
                
                return True
            
            if len(word1_wiki['related_words'] & word2_wiki['related_words']) > 0 or (word1_wiki['root'] == word2_wiki['root'] and word1_wiki['root'] != '' and word2_wiki['root'] != '') :
                
                return True
            else :
                
                return False
            
        else :
            
            return False
        
        
        
    def get_cache(self, all_categories: list, only_keys: bool = False) -> tuple :
        
        """
        get_cache(self, all_categories: list, only_keys: bool = False) -> tuple
        
        Позволяет получить облегчённый cash для функции self.is_cognate
        
        all_categories - list; список словосочетаний для разбора, в основном используется для категорий
        only_keys - bool; позволяет не получать cash а только разбить список слов на одиносные нормализированные (в инфинитиве) слова
        
        Возвращает кортеж из двух списков: список нормализированных (в инфинитиве) слов и cash для функции self.is_cognate()
        """

        all_cats_keys = {}

        all_lex_values = {}

        for cat in all_categories :

            tmp_list = []

            for wrd in cat.split() :

                an = self.morph.parse(wrd.translate(str.maketrans('', '', punctuation)))[0]            

                if an.tag.case != None :

                    tmp_list.append(an.normal_form)

                    if not only_keys :

                        all_lex_values[an.normal_form] = self.cash.get(an.normal_form, {'root': '', 'related_words': set()})     

            all_cats_keys[cat] = tmp_list

        return (all_cats_keys, all_lex_values)  
    
    def get_word_sences(self, word) :
        word_dis = self.disambig_word(word)

        if word_dis :
            params = {
                'action': 'parse',
                'prop': 'text',
                'page': word_dis,
                'format': 'json',
                'redirects': 1,
            }
            soup = BeautifulSoup(self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()['parse']['text']['*'], features="lxml")

            links = []

            for ul in soup.select_one('div.mw-parser-output').find_all('ul', recursive=False) :
                set_denied = {'Топоним', 'См. также', 'Имя', 'Фамилия'}

                try :
                    if ul.find_previous_sibling().text.strip() in set_denied and ul.find_previous_sibling().name == 'h2' :
                        pass
                    else :
                        for a in ul.find_all('a') :
                            if word.lower() in a.text.lower().split() :
                                try : 
                                    if 'mw-redirect' in a['class'] :
                                        params = {
                                            'action': 'query',
                                            'titles': a['title'],
                                            'format': 'json',
                                            'redirects': 2
                                        }   
                                        a['title'] = self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()['query']['redirects'][0]['to']
                                    if 'new' not in a['class'] : links.append(a['title'])
                                except : links.append(a['title'])
                except :
                    for a in ul.find_all('a') :
                        if word.lower() in a.text.lower().split() :
                            try : 
                                if 'mw-redirect' in a['class'] :
                                    params = {
                                        'action': 'query',
                                        'titles': a['title'],
                                        'format': 'json',
                                        'redirects': 2
                                    }   
                                    a['title'] = self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()['query']['redirects'][0]['to']
                                if 'new' not in a['class'] : links.append(a['title'])
                            except : 
                                try :
                                    links.append(a['title'])
                                except :
                                    pass

            if len(links) < 31 :
                return links
            else :
                return [word.capitalize()]

        else :
            return [word.capitalize()]


    def getting_cats(self, word, all_cats_keys={}, all_lex_values={}) :

        ck_cats = []
        el_words = []
        sences = self.get_word_sences(word)

        for wrd in sences:

            try :
                params = {
                    'action': 'query',
                    'prop': 'revisions',
                    'rvslots': '*',
                    'rvprop': 'content',
                    'titles': wrd,
                    'format': 'json',
                    'redirects': 1,
                    'section': 0
                }
                page_py = self.wiki_wiki.page(wrd)
                res_hid = list(page_py.categories_hid.keys())
                res = list(page_py.categories.keys())

                if 'Категория:Персоналии по алфавиту' in res or 'Категория:Населённые пункты по алфавиту' in res or 'Категория:Википедия:Страницы с картами' in res_hid :
                    
                    pass
                
                else :
                    
                    for ct in res :

                        ck_cats.append(ct.split(':')[1])

                    skip = False

                    if len(sences) == 1 :
                        
                        response = self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()
                        id = list(response['query']['pages'].keys())[0]
                        text = response['query']['pages'][id]['revisions'][0]['slots']['main']['*']
                        
                        for txt in text.split('\n') :
                            
                            if txt[0:3] == "'''" or skip == True:

                                starts = [m.end() for m in re.finditer(r'\[\[', txt)]

                                if len(starts) == 0 :
                                    
                                    skip = True
                                    continue
                                
                                ends = [m.start() for m in re.finditer(r'\]\]', txt)]
                                
                                for i in range(len(starts)) :
                                    
                                    el_words.append(txt[starts[i]:ends[i]].split('|')[0])

                                break
            except :
                
                pass

        cat_list = []

        for cat in ck_cats :
            cat = 'Категория:' + cat 
            if cat in self.wik_exctracted_cats :
                cat_list.append(cat)

        return list(set(cat_list)), {}
    
    
    def get_all_sets(self,all_dict) :   

        tree_dict = {}

        for word in all_dict :
        
            for cat in all_dict[word] :

                try :

                    page_py = self.wiki_wiki.page(cat)
            
                    tmp_list = [word.title for word in page_py.categorymembers.values()]

                    tmp_list_2 = list(page_py.categories.keys())

                    tmp_list.extend(tmp_list_2)

                    tree_dict[cat] = set(tmp_list)

                except : 
                    
                    pass

        return tree_dict



    def get_max_pairs(self, listing, tree_dict) :

        num_of_pairs = []

        cat_keys, cat_lex = self.get_cache([key.replace('Категория:', '') for key in tree_dict.keys()], only_keys=True)

        for mb_cat in listing :

            for check_cat in tree_dict :

                try :

                    if mb_cat == check_cat :

                        num_of_pairs.append(mb_cat)

                        continue

                    elif len(tree_dict[mb_cat] & tree_dict[check_cat]) > 0 :

                        num_of_pairs.append(mb_cat)
                        continue

                    for word_mb in cat_keys[mb_cat.replace('Категория:', '')] :

                        for word_check in cat_keys[check_cat.replace('Категория:', '')] :

                            if word_mb == word_check :

                                num_of_pairs.append(mb_cat)
                                continue
                    
                except :

                    page_py = self.wiki_wiki.page(mb_cat)
            
                    tmp_list = [word.title for word in page_py.categorymembers.values()]

                    tmp_list_2 = list(page_py.categories.keys())

                    tmp_list.extend(tmp_list_2)

                    if len(set(tmp_list) & tree_dict[check_cat]) > 0 :

                        num_of_pairs.append(mb_cat)
                            
                        continue


        return Counter(num_of_pairs)


    def get_category_by_kw(self, listing) :

        dictionary = {}
        all_res = []
        disam = []
        c1 = time.time()
        for word in listing :

            if self.disambig_word(word) :

                lms = []

                for lm in self.accepted_sences :

                    if word in lm.lower().split('(')[0] :

                        lms.append(lm)

                disam.extend(lms)

            
            else :
                try :
                    params = {
                    'action': 'query',            
                    'format': 'json',
                    'redirects': 2,
                    'list': 'search',
                    'srprop': '',
                    'srlimit': 5,
                    'limit': 5,
                    'srsearch': word
                    }       
                    result = [el['title'] for el in self.session.get('https://ru.wikipedia.org/w/api.php', params=params).json()['query']['search']]
                    dictionary[word] = result
                    all_res.extend(result)
                    
                except :

                    pass
                
        c2 = time.time()

        all_res = Counter(all_res)

        keys, lex = self.get_cache([res.split('(')[0].strip() for res in all_res])
        keys_dict, values_dict = self.get_cache(list(dictionary.keys()))

        true_res = []
        lex.update(values_dict)


        for word in dictionary :
            for wiki in dictionary[word] :
                if all_res[wiki] > 1 :
                    true_res.append(wiki)

                    if ' '.join([self.morph.parse(prs_wrd)[0].normal_form for prs_wrd in wiki.split('(')[0].strip().split()]) in [' '.join(self.all_cats_keys[ct_ak]) for ct_ak in self.all_cats_keys] :

                        return wiki.split('(')[0].strip().capitalize()
                else :
                    got = False
                    for wrd in keys_dict[word] :
                        for wk in keys[wiki.split('(')[0].strip()] :
                            if wrd == wk or self.is_cognate(wrd, wk, lex) :
                                true_res.append(wiki)
                                got = True
                                break
                        if got :
                            break

        true_res = set(true_res) & self.accepted_sences
        dis_dict = {}
        dct = {}

        for word in disam :
            g_c = self.getting_cats(word, self.all_cats_keys, self.all_lex_values)
            dis_dict[word] = g_c[0]
            dct.update(g_c[1])

        sol_dict = {}
        for word in true_res :
            try :
                g_c = self.getting_cats(word, self.all_cats_keys, self.all_lex_values)
                dis_dict[word] = g_c[0]
                dct.update(g_c[1])
            except :    
                g_c = self.getting_cats(word, self.all_cats_keys, self.all_lex_values)
                dis_dict[word] = g_c[0]
                dct.update(g_c[1])
        all_cats_mb = []
        all_dict = {**dis_dict, **sol_dict, **dct}

        disambed_cats = []
        
        for word in dis_dict :
        
            for cat in dis_dict[word] :

                disambed_cats.append(cat)

        for word in all_dict :
        
            for cat in all_dict[word] :

                all_cats_mb.append(cat)

        cnt = dict(Counter(all_cats_mb))

        cnt_cp = cnt.copy()

        for word in cnt_cp :

            if word in disambed_cats and cnt_cp[word] == 1 :

                cnt.pop(word, None)

        for elem in cnt :
            cnt[elem] = cnt[elem] * self.leveled_cats[elem]

        maximum = 0
        max_elem = []
        for elem in cnt :
            if cnt[elem] > maximum :
                maximum = cnt[elem]
                max_elem = []
                max_elem.append(elem)
            elif cnt[elem] == maximum :
                max_elem.append(elem)

        try :
            if len(max_elem) > 1 :

                in_allcat = []               

                cached_header, header_lex = self.get_cache([elem.split(':')[1] for elem in max_elem])

                for hdr in cached_header :

                    for wrd_hd in cached_header[hdr] :

                        for cat in self.all_cats_keys :

                            for wrd_ct in self.all_cats_keys[cat] :

                                if wrd_ct == wrd_hd :

                                    in_allcat.append('Категория:' + hdr)

                in_allcat = list(set(in_allcat))

                if len(in_allcat) == 1 :
                    
                    resp = in_allcat[0]
                    
                elif len(in_allcat) > 1 :

                    tree_dict = self.get_all_sets(all_dict)
                    resp = self.get_max_pairs(in_allcat, tree_dict)
                    resp = resp.most_common(1)[0][0]

                else : 

                    tree_dict = self.get_all_sets(all_dict)
                    resp = self.get_max_pairs(max_elem, tree_dict)
                    resp = resp.most_common(1)[0][0]

            else :
                
                resp = max_elem[0]
                
        except IndexError :
            
            return 'Разное'

        return resp, cnt
    
    
    def get_text_theme(self, header: str, text: str) -> tuple :
        
        """
        get_text_theme(self, header: str, text: str) -> str
        
        Получает тему на основе заголовка и текста
        
        Аргументы
        header - str; заголовок
        text - str; текст
        
        Возвращает tuple состоящий из str в формате "Категория:$cat", где $cat - определённая алгоритмом категория и dict с остальными кандидатами на категорию и их оценкой
        """
        
        header_kws = self.get_bigramms(header, True, False)

        all_bg = self.get_bigramms(text) 

        text_kws = self.most_popular_bigramms(all_bg, 10)
        
        if list(header_kws) == [] :

            header_kws = list(text_kws.keys()).copy()     

        encoded_header_kws = []

        encoded_text_kws = []
        
        for text_kw in list(text_kws.keys()).copy() :

            t_k = text_kw

            text_kw = self.is_abbr(text_kw)   

            if t_k != text_kw :

                text_kws[text_kw] = text_kws.pop(t_k)

            encoded_text_kws.append(self.model[text_kw])  
        
        mb_hd = []

        for header_kw in header_kws.copy() :

            header_kw_ind = header_kws.index(header_kw)
            header_kw = self.is_abbr(header_kw)
            header_kws[header_kw_ind] = header_kw        

            cached_header, header_lex = self.get_cache([header_kw])

            for hdr in cached_header :

                    for cat in self.all_cats_keys :

                        if cached_header[hdr] == self.all_cats_keys[cat] :

                            mb_hd.append(cat)
                        
                        elif len(self.all_cats_keys[cat]) == 1 :
                            
                            for wrd_hd in cached_header[hdr] :

                                if self.is_cognate(wrd_hd, self.all_cats_keys[cat][0]) :

                                    mb_hd.append(cat)
                                        
            encoded_header_kws.append(self.model[header_kw])
            
        encoded_header_kws = np.asarray(encoded_header_kws)
        encoded_text_kws = np.asarray(encoded_text_kws)   

        cos_sim = cosine_similarity(encoded_header_kws, encoded_text_kws)
        
        coeffs = []

        encoded_header_kws = np.asarray(encoded_header_kws)
        encoded_text_kws = np.asarray(encoded_text_kws)  
        cos_sim = cosine_similarity(encoded_header_kws, encoded_text_kws) 
        
        coeffs = []
        coeffs_dict = {}

        for i in range(len(cos_sim)) :
             
            lst = list(cos_sim[i])
            num = sum([n * list(text_kws.values())[lst.index(n)] for n in lst]) 
            coeffs.append(num)
            coeffs_dict[num] = header_kws[i]

        coeffs.sort()
        coeffs.reverse()
        
        med = sum(coeffs) / len(coeffs)

        coeffs_big = []
        coeffs_diff = []
        num = 0
        for i in range(len(coeffs)) :
            if coeffs[i] > med :
                
                coeffs_big.append(coeffs[i])  
                
                if num > 0 :
                    
                    coeffs_diff.append(coeffs_big[num - 1] - coeffs_big[num])
                    
                num = num + 1
                
        if len(coeffs_diff) > 1 :
            
            max_diff = max(coeffs_diff)
            ind = coeffs_diff.index(max_diff)
            coeffs_diff.pop(ind)
            diff_med = sum(coeffs_diff) / len(coeffs_diff)

            if max_diff / diff_med > 2 :
                
                pre = [coeffs_dict[coeffs[i]] for i in range(ind + 1)]
                
            else :
                
                pre = list(coeffs_dict.values())
                
        else :
            
            pre = list(coeffs_dict.values())

        kw_text_list = [kw for kw in text_kws.keys() if kw not in pre and len(kw.split()) == 1]

        encoded_pre = [self.model[pre_word] for pre_word in pre]

        encoded_kw_text_list = [self.model[text_list_word] for text_list_word in kw_text_list]

        cos_sim_2 = cosine_similarity(encoded_kw_text_list, encoded_pre) 

        values_kw = []

        for i in range(len(kw_text_list)) :

            values_kw.append([sum(cos_sim_2[i]), kw_text_list[i]])

        values_kw.sort(reverse=True)

        med = sum([value[0] for value in values_kw]) / len(values_kw)

        true_val = [value[1] for value in values_kw if value[0] > med]

        pre.extend(true_val)

        return self.get_category_by_kw(pre)



if __name__ == '__main__' :
    
    obj = Determinant() 
    
    header = "Как сделать освещение на даче: 6 советов по выбору светильников"

    text = """1. Что вы хотите осветить
    Казалось бы, ответ простой: улицу. Но дачный участок не проспект. Яркий фонарь удобен над входом, а в зоне отдыха будет уместнее мягкий интимный свет. Многоточие светильников на уровне земли эффектно подсветит дорожки. А светодиодные гирлянды на дереве создадут праздничное настроение в беседке и у мангала.

    Во всех примерах у уличных фонарей разное назначение, а значит, будут отличаться их внешний вид и источник питания.

    В идеале ландшафтный свет планируют так же, как и световой сценарий в интерьере квартиры. Заранее продумывают расположение и тип светильников, яркость ламп, удобство их включения и выключения.

    Итак, уличное освещение бывает:

    1. Что вы хотите осветить
    Функциональным: освещают въезд и выезд, ворота и калитку, препятствия на пути, зону отдыха и вход в дом, перепады высот и мокрые (скользкие) участки, например, подходы к водоему.
    Маркировочным: слабым светом показывают детали территории, которые помогут сориентироваться на участке в темноте. Например, точечными фонарями, установленными по краям дорожки, выделяют пешеходную зону. Или устанавливают светильники на ступенях для мягкого освещения лестницы. Для улучшения видимости резервного выхода заднюю калитку окаймляют светодиодной лентой.
    Светильник Arte Lamp Salire
    Светильник Arte Lamp Salire

    Для освещения дорожки

    Смотреть
    Охранным: освещение включается в систему безопасности участка и дома. Главная задача охранного освещения — спугнуть злоумышленника. Светильники размещают по периметру участка, вокруг дома и гаража и частично оснащают датчиками движения, чтобы дополнительный свет включался при движении человека в зоне чувствительности датчика.
    Дизайнерским: выделяют светом украшения, статуи, цветы и деревья. Или делают акцент на изменениях ландшафта, подсвечивают фасады зданий. Или создают на дачном участке ночную сказку, программируя различные световые сценарии.
    Светильник Arte Lamp Atlas
    Светильник Arte Lamp Atlas

    Подсветка здания

    Смотреть
    2. От какого источника будут работать светильники
    Современные уличные светильники могут работать от электрической сети, от солнечных батарей и от аккумуляторных батареек. При размещении на дачном участке обычно совмещают различные варианты, в зависимости от удобства подключения.

    Если вы планируете разместить источники освещения на удалении от дома, решите, какая будет проводка — воздушная или подземная.

    При открытой воздушной проводке кабель прокладывают по воздуху и закрепляют на опорах. Открытую проводку установить проще, чем скрытую, это дешевле, и ее удобнее обслуживать. Но есть и минусы: провода сложно вписываются в эстетику ландшафтного дизайна. Даже самый красивый светильник на постаменте испортит тянущийся к нему по воздуху провод. К тому же дождь, ветер, перепады температур заметно сокращают срок службы кабеля, который находится на улице.

    При закрытой подземной проводке кабель помещают в трубу или короб и закапывают. Кабель в этом случае защищен от неблагоприятных воздействий и служит дольше. К нему можно подключать светильники любой высоты, даже маркировочные на уровне земли. К минусам можно отнести сложности при техобслуживании и при монтаже. Траншею глубиной от 70 до 90 см прокапывают, обходя деревья (на 2 метра), кустарники (на 75 см) и строения (на 60 см).

    Светильники, которые работают от электрической сети и используются в уличном освещении, — это лампы накаливания, люминесцентные, галогеновые, энергосберегающие и светодиодные лампы. Важный критерий для покупки — при какой температуре используют лампу.

    2. От какого источника будут работать светильники 
    Лампы накаливания применяют в любое время года. Однако во время работы колба лампы нагревается, поэтому в регионах с резкими перепадами температур на улице устанавливают лампы только с термостойким корпусом.
    Люминесцентные, галогеновые и энергосберегающие лампы потребляют меньше электричества, чем лампы накаливания, но не надежны при минусовых температурах. У таких ламп также ограниченное количество включений/выключений. Поэтому подключать их в систему с датчиком движения не рекомендуется.
    Светодиодные лампы. Встроенные в корпус уличного фонаря светодиоды смотрятся очень эффектно. Однако для продолжительной работы таких моделей при монтаже установите защиту от перепадов напряжения, утечек и сверхтоков. Иначе обычная гроза с молнией может привести к поломке всех фонарей
    Лампа Volpe
    Лампа Volpe

    Люминесцентная

    Смотреть
    Автономное освещение актуально, если вы хотите сэкономить на оплате электроэнергии, при этом оставаясь со светом даже при отключении электричества. Такие энергонезависимые источники света отлично справятся с маркировочной или декоративной подсветкой.

    Светильники на солнечных батареях потребляют энергию от никель-кадмиевой аккумуляторной батареи мощностью 600−700 мА/час, которая черпает питание от солнца даже в пасмурную погоду. Материал, из которого сделаны такие светильники, не портится от дождя и перепадов температур. Средний срок службы устройств на солнечных батареях более 5 лет.
    Фонари, работающие на батарейках, состоят из светодиодного светильника, фокусной линзы и рассеивателя света. Внутри устройства дополнительно может быть установлен выключатель для настройки режимов работы. Средний срок службы таких фонарей до 250 часов.
    Светильник LAMPER
    Светильник LAMPER

    На солнечной батарее

    Смотреть
    Беспроводные модели могут иметь разное исполнение: грунтовые точечные светильники, беспроводные торшеры, подвесные гирлянды, встраиваемые и настенные фонари. Их легко установить на даче своими силами без дополнительных затрат и привлечения специалистов. Главное, чтобы солнечный свет беспрепятственно попадал на солнечную батарею.

    Однако есть и два недостатка. Приборы на солнечных батареях не могут работать в регионах с малым световым днем. А светильники на батарейках быстро разряжаются на морозе.

    3. Какой выбрать способ монтажа
    При выборе светильников обращают внимание и на способ монтажа:

    3. Какой выбрать способ монтажа
    Напольные: фонари, которые устанавливают на разновысоких подставках или столбиках.
    Настенные: светильники по типу бра, которые крепятся на стене или другой вертикальной конструкции.
    Подвесные: в качестве опоры для таких люстр и гирлянд используют детали конструкций беседок и ветки деревьев.
    Встраиваемые: небольшие по размеру и неяркие по свету светильники устанавливают вровень с землей, ступенью, тротуаром.
    Уличное бра
    Уличное бра

    На солнечной батарее

    Смотреть
    Существует большой выбор светильников на солнечных батареях, вставляемых прямо в газон. Очень удобный и практичный способ осветить нужный участок дачи. А при необходимости всего за несколько секунд такой светильник можно переставить в другое место, изменив световой акцент на участке.

    Газонный светильник LAMPER
    Газонный светильник LAMPER

    На солнечной батарее

    Смотреть
    4. Какие параметры должны быть у светильника
    На некоторые характеристики следует обратить особое внимание. По сути, уличные лампы должны соответствовать главному обязательному условию: степень защиты от влаги и пыли не менее IP44. При покупке прожекторов ориентируются на IP65. В противном случае для светильника делают собственную крышу или козырек.

    Для остальных характеристик уличных светильников жестких требований нет. Есть лишь рекомендации:

    светильник должен корректно корректно работать при любой погоде, в том числе при минусовых температурах;
    техническое обслуживание в процессе эксплуатации не требуется;
    светильник потребляет энергию экономично;
    для светильников на солнечных батареях нужно обратить внимание на размер батарей и емкость аккумулятора, чтобы дневного суточного заряда хватало на 6−8 часов ночной работы;
    для направленного освещения определенного участка территории или конкретного предмета в приборе должен присутствовать отражатель.
    Популярная дополнительная функция уличного светильника — это автоматическое включение и выключение света. Возможны варианты:

    фотореле — включается при наступлении темноты и выключается с рассветом;
    датчики движения — свет включается при обнаружении движения;
    временное реле — пользователи самостоятельно устанавливают время включения и выключения в течение суток, эту периодичность и соблюдает автомат.
    Для еще более высокого уровня комфорта к системе внешнего освещения подключают микроконтроллер и задают параметры работы уличного света как одну из функций умного дома. Причем, помимо включения и выключения, программируют яркость света в зависимости от ситуации.

    4. Какие параметры должны быть у светильника 
    5. Как сделать дачное освещение безопасным
    В большей степени этот вопрос относится к подбору специалистов, которые делают монтаж и проводят подключение. Описанные ниже требования к безопасному освещению помогут вам задать правильные вопросы мастеру и понять, сможет ли он качественно сделать работу:

    при коротком замыкании или пробое изоляции система должна автоматически обесточить участок цепи;
    открытая проводка должна быть с двойной изоляцией;
    подземную проводку прокладывают в пластиковой трубе, гофре или специальном рукаве для кабеля на глубине не менее 70 см;
    сечение провода выбирается по предполагаемой нагрузке на него (складывают потребляемую мощность всех светильников, подключенных по этой цепи, получают суммарную нагрузку, которую провод должен выдерживать);
    провода не соединяют с помощью скруток, безопасными соединениями считаются зажимы и пайки, поверх закрытые изоляционным материалом;
    светильники зонально объединяют в группы, для каждой группы устанавливают свое заземление и отдельный автомат (количество светильников в группе определяется по суммарной предполагаемой нагрузке и общей площади территории).
    Расположение выключателей и розеток планируют на высоте с учетом уровня осадков и изменения ландшафта. Например, в московском регионе за городом уровень снежного покрова за зиму поднимается в среднем до 50 см. На уровне 60−70 см и устанавливают розетку. Но если участок находится в низине, то эту высоту увеличивают до 100−120 см.

    6. Как распределить светильники на участке и направить свет
    Чтобы освещение на участке было гармоничным и удобным, составьте схему заранее. За основу возьмите план участка со строениями, грядками, дорожками и зоной отдыха. На него нанесите источники света и их высоту. Если светильник должен иметь направленный свет, отметьте направление светового потока. При планировании учитывайте рельеф, строения и крупномерные деревья. Словом, то, что дает дополнительную тень.

    Основные ошибки могут быть связаны с неверным балансом освещенности различных зон, выбором высоты установки и направлением потока света. Например, яркий свет от прожектора на уровне глаз не покажет дорогу, а ослепит идущего.

    Такую схему уличного освещения уже можно передавать специалисту по прокладке электропроводки.

    Советы по планированию светового сценария на участке:

    фонари высотой более метра размещают на расстоянии 7−10 метров друг от друга;
    чем меньше высота фонарей, тем ближе их располагают друг к другу;
    светильниками высотой до метра или встроенными на уровне земли выделяют изгибы дорожек, перепады высот, ступеньки;
    наряду с фонарями продумайте установку розеток около зон отдыха: пригодится и для зарядки гаджета, и для подключения музыки, и для работы приборов, отпугивающих насекомых.
    6. Как распределить светильники на участке и направить свет
    Резюме
    Наши рекомендации, чтобы сделать освещение на участке комфортным и надежным.

    Составьте световой дизайн-проект участка, чтобы совместить функциональный свет и декоративный, выгодно подчеркнув красоту ландшафта и сада.
    Совместите автономную и электрическую системы освещения. Тогда участок будет освещен даже при отключении электричества.
    Активнее используйте фонари на солнечных батареях. Такой свет не увеличит счет за электроэнергию.
    Для уличного освещения выбирайте светильники с защитой от влаги и пыли от IP44, которые подходят для работы в разных погодных условиях."""

    # Источник статьи: https://www.mvideo.ru/blog/pomogaem-razobratsya/kak-sdelat-osveshhenie-na-dache-6-sovetov-po-vyboru-svetilnikov

    print(obj.get_text_theme(header, text))